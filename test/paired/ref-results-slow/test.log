[92mcache-parameters-data[0m            /home/dralph/work/partis/bin/partis cache-parameters --dont-write-git-info --paired-loci --infname test/paired-data/all-seqs.fa --parameter-dir test/paired/new-results-slow/test/parameters/data --n-max-queries -1 --random-seed 1 --n-procs 10
  note: --paired-outdir is not set, so there will be no persistent record of the results (except the parameter directory).
[91mrun[0m /home/dralph/work/partis/bin/extract-pairing-info.py test/paired-data/all-seqs.fa /tmp/dralph/hmms/546050/meta.yaml
  extract_pairing_info(): read 100 sequences with 48 droplet ids
    droplet id separators (set automatically): _  indices: [0]
       e.g. uid 'AAACCTGAGAGACGAA-1_contig_2' --> droplet id 'AAACCTGAGAGACGAA-1' contig id '2'
    contigs per
      droplet     count   fraction
        1            2     0.042
        2           42     0.875
        3            2     0.042
        4            2     0.042
[91mrun[0m /home/dralph/work/partis/bin/split-loci.py test/paired-data/all-seqs.fa --outdir /tmp/dralph/hmms/546050 --input-metafname /tmp/dralph/hmms/546050/meta.yaml
  --input-metafnames: added meta info for 100 sequences from /tmp/dralph/hmms/546050/meta.yaml: paired-uids
    read pairing info for 100 seqs from input meta file
  running vsearch on 100 sequences:
    igh:   50 / 100 v annotations (50 failed) with 31 v genes in 0.1 sec
    igk:   39 / 100 v annotations (61 failed) with 20 v genes in 0.1 sec
    igl:   17 / 100 v annotations (83 failed) with 15 v genes in 0.1 sec
totals: igh 48 igk 37 igl 15
  removed 0 failed uids from paired_uids
            count  frac  paired with
       [94mh[0m      31   0.65   [95mk[0m
              11   0.23   [92ml[0m
               2   0.04   [94mh[0m [95mk[0m [92ml[0m
               2   0.04   [94mh[0m [95mk[0m [95mk[0m
               1   0.02   [92ml[0m [92ml[0m
               1   0.02   [95mk[0m [92ml[0m
       [95mk[0m      31   0.84   [94mh[0m
               2   0.05   
               2   0.05   [94mh[0m [94mh[0m [95mk[0m
               1   0.03   [94mh[0m [92ml[0m
               1   0.03   [94mh[0m [94mh[0m [92ml[0m
       [92ml[0m      11   0.73   [94mh[0m
               2   0.13   [94mh[0m [92ml[0m
               1   0.07   [94mh[0m [95mk[0m
               1   0.07   [94mh[0m [94mh[0m [95mk[0m
writing to /tmp/dralph/hmms/546050/
  igh: 48 to 546050/igh.fa
  igk: 37 to 546050/igk.fa
  igl: 15 to 546050/igl.fa
writing to paired subdirs
    36/48 igh seqs pair with igk
      igh: 36 to igh+igk/igh.fa
      igk: 37 to igh+igk/igk.fa
    15/48 igh seqs pair with igl
      igh: 15 to igh+igl/igh.fa
      igl: 15 to igh+igl/igl.fa
[44mcache-parameters[0m [94migh[0m:
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igh --dont-write-git-info --infname /tmp/dralph/hmms/546050/igh.fa --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --random-seed 1 --n-procs 10 --sw-cachefname test/paired/new-results-slow/test/parameters/data/igh/sw-cache.yaml --input-metafnames /tmp/dralph/hmms/546050/meta.yaml
  --input-metafnames: added meta info for 48 sequences from /tmp/dralph/hmms/546050/meta.yaml: paired-uids
caching parameters
  vsearch: 48 / 48 v annotations (0 failed) with 29 v genes in 0.1 sec
    keeping 23 / 220 v genes
smith-waterman  (new-allele fitting)
  vsearch: 48 / 48 v annotations (0 failed) with 23 v genes in 0.1 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/data/igh/sw-cache.yaml
    running 10 procs for 48 seqs
      info for 48 / 48 = 1.000   (removed: 0 failed)
      kept 1 (0.021) unproductive
    water time: 0.2  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 48 / 48 v annotations (0 failed) with 23 v genes in 0.1 sec
    running 10 procs for 48 seqs
      info for 48 / 48 = 1.000   (removed: 0 failed)
      kept 1 (0.021) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/data/igh/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/data/igh/sw (1.8 sec)
    water time: 2.1  (ig-sw 1.9  processing 0.2)
  writing hmms (0.2 sec)
hmm
    reading output
        read 48 hmm output lines with 48 sequences in 48 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/data/igh/hmm (1.6 sec)
         infra time: 1.7
      hmm step time: 2.1
  writing hmms (0.2 sec)
      total time: 5.3
[44mcache-parameters[0m [94migk[0m:
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igk --dont-write-git-info --infname /tmp/dralph/hmms/546050/igk.fa --parameter-dir test/paired/new-results-slow/test/parameters/data/igk --random-seed 1 --n-procs 10 --sw-cachefname test/paired/new-results-slow/test/parameters/data/igk/sw-cache.yaml --input-metafnames /tmp/dralph/hmms/546050/meta.yaml
  --input-metafnames: added meta info for 37 sequences from /tmp/dralph/hmms/546050/meta.yaml: paired-uids
caching parameters
  vsearch: 37 / 37 v annotations (0 failed) with 17 v genes in 0.1 sec
    keeping 16 / 58 v genes
smith-waterman  (new-allele fitting)
  vsearch: 37 / 37 v annotations (0 failed) with 16 v genes in 0.1 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/data/igk/sw-cache.yaml
    running 10 procs for 37 seqs
      info for 37 / 37 = 1.000   (removed: 0 failed)
      kept 1 (0.027) unproductive
    water time: 0.1  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 37 / 37 v annotations (0 failed) with 16 v genes in 0.1 sec
    running 10 procs for 37 seqs
      info for 37 / 37 = 1.000   (removed: 0 failed)
      kept 1 (0.027) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/data/igk/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/data/igk/sw (1.3 sec)
    water time: 1.6  (ig-sw 1.4  processing 0.1)
  writing hmms (0.1 sec)
hmm
    reading output
        read 37 hmm output lines with 37 sequences in 37 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/data/igk/hmm (1.1 sec)
         infra time: 1.2
      hmm step time: 1.5
  writing hmms (0.1 sec)
      total time: 3.8
[44mcache-parameters[0m [94migl[0m:
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igl --dont-write-git-info --infname /tmp/dralph/hmms/546050/igl.fa --parameter-dir test/paired/new-results-slow/test/parameters/data/igl --random-seed 1 --n-procs 10 --sw-cachefname test/paired/new-results-slow/test/parameters/data/igl/sw-cache.yaml --input-metafnames /tmp/dralph/hmms/546050/meta.yaml
  --input-metafnames: added meta info for 15 sequences from /tmp/dralph/hmms/546050/meta.yaml: paired-uids
caching parameters
  vsearch: 15 / 15 v annotations (0 failed) with 13 v genes in 0.1 sec
    keeping 10 / 70 v genes
smith-waterman  (new-allele fitting)
  vsearch: 15 / 15 v annotations (0 failed) with 10 v genes in 0.0 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/data/igl/sw-cache.yaml
    running 10 procs for 15 seqs
      info for 15 / 15 = 1.000   (removed: 0 failed)
    water time: 0.1  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 15 / 15 v annotations (0 failed) with 10 v genes in 0.0 sec
    running 10 procs for 15 seqs
      info for 15 / 15 = 1.000   (removed: 0 failed)
        writing sw results to test/paired/new-results-slow/test/parameters/data/igl/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/data/igl/sw (0.9 sec)
    water time: 1.1  (ig-sw 1.0  processing 0.1)
  writing hmms (0.1 sec)
hmm
    reading output
        read 15 hmm output lines with 15 sequences in 15 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/data/igl/hmm (0.7 sec)
         infra time: 0.7
      hmm step time: 0.9
  writing hmms (0.1 sec)
      total time: 2.6
      [93mwarning[0m expected to remove 1/11 files+dirs that weren't in /tmp/dralph/hmms/546050/: failed.fa
      total time: 13.4
[92msimulate[0m                         /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --paired-loci --parameter-dir test/paired/new-results-slow/test/parameters/data --n-sim-events 200 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/test/simu --indel-frequency 0.2
    cleaning paired files in test/paired/new-results-slow/test/simu/
[94migh+igk[0m: simulating 134 events
[44mgenerate-trees[0m [94migh+igk[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-trees 134 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 177687104 --indel-frequency 0.2 --generate-trees --outfname test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
  note: reducing --n-procs to 1 (was 28) so it isn't bigger than --n-sim-events
  generating 134 trees, n-leaves from geometric distribution with parameter 5.0
    mean over 134 trees:   depth 0.02835   leaves 5.57
    writing trees to test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
      total time: 1.6
[44msimulate[0m [94migh+igk[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-sim-events 134 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 177687104 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igk/igh.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
simulating
      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-7.nwk
    made 13 events with 65 seqs in 2.3s (2.1s of which was running bppseqgen)
      total time: 2.6

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-4.nwk
    made 13 events with 59 seqs in 2.4s (2.1s of which was running bppseqgen)
      total time: 2.7

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-8.nwk
    made 13 events with 57 seqs in 2.4s (2.0s of which was running bppseqgen)
      total time: 2.7

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-5.nwk
    made 13 events with 47 seqs in 2.5s (2.1s of which was running bppseqgen)
      total time: 2.8

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-6.nwk
    made 13 events with 55 seqs in 2.5s (2.2s of which was running bppseqgen)
      total time: 2.7

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-1.nwk
    made 13 events with 71 seqs in 2.6s (2.2s of which was running bppseqgen)
      total time: 3.0

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-3.nwk
    made 13 events with 84 seqs in 2.7s (2.4s of which was running bppseqgen)
      total time: 3.2

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-2.nwk
    made 13 events with 104 seqs in 2.9s (2.6s of which was running bppseqgen)
      total time: 3.3

      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/655508/trees-sub-0.nwk
    made 13 events with 94 seqs in 3.0s (2.6s of which was running bppseqgen)
      total time: 3.4

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 17 to match trees read from /tmp/dralph/hmms/655508/trees-sub-9.nwk
    made 17 events with 111 seqs in 3.7s (3.3s of which was running bppseqgen)
      total time: 4.0

   read 134 events with 747 seqs from 10 .yaml files
      total time: 4.9
[44msimulate[0m [94migh+igk[0m:[94m igk[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igk --n-sim-events 134 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 298017927 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igk/igk.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igk/trees.nwk
simulating
      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-1.nwk
    made 13 events with 71 seqs in 2.0s (1.7s of which was running bppseqgen)
      total time: 2.4

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-5.nwk
    made 13 events with 47 seqs in 2.0s (1.8s of which was running bppseqgen)
      total time: 2.4

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-4.nwk
    made 13 events with 59 seqs in 2.1s (1.8s of which was running bppseqgen)
      total time: 2.5

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-6.nwk
    made 13 events with 55 seqs in 2.1s (1.9s of which was running bppseqgen)
      total time: 2.4

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-8.nwk
    made 13 events with 57 seqs in 2.1s (2.0s of which was running bppseqgen)
      total time: 2.4

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-3.nwk
    made 13 events with 84 seqs in 2.3s (2.0s of which was running bppseqgen)
      total time: 2.7

      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-0.nwk
    made 13 events with 94 seqs in 2.3s (2.0s of which was running bppseqgen)
      total time: 2.8

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-7.nwk
    made 13 events with 65 seqs in 2.3s (2.1s of which was running bppseqgen)
      total time: 2.6

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 13 to match trees read from /tmp/dralph/hmms/506442/trees-sub-2.nwk
    made 13 events with 104 seqs in 2.7s (2.5s of which was running bppseqgen)
      total time: 3.1

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igk/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igk/hmm
    resetting --n-trees from 200 to 17 to match trees read from /tmp/dralph/hmms/506442/trees-sub-9.nwk
    made 17 events with 111 seqs in 2.8s (2.5s of which was running bppseqgen)
      total time: 3.0

   read 134 events with 747 seqs from 10 .yaml files
      total time: 3.9
[94migh+igl[0m: simulating 66 events
[44mgenerate-trees[0m [94migh+igl[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-trees 66 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 172687121 --indel-frequency 0.2 --generate-trees --outfname test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
  note: reducing --n-procs to 1 (was 28) so it isn't bigger than --n-sim-events
  generating 66 trees, n-leaves from geometric distribution with parameter 5.0
    mean over 66 trees:   depth 0.02473   leaves 6.45
    writing trees to test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
      total time: 1.4
[44msimulate[0m [94migh+igl[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igh --n-sim-events 66 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 172687121 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igl/igh.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
simulating
      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-0.nwk
    made 6 events with 15 seqs in 1.0s (0.9s of which was running bppseqgen)
      total time: 1.5

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-7.nwk
    made 6 events with 31 seqs in 1.1s (0.9s of which was running bppseqgen)
      total time: 1.4

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-4.nwk
    made 6 events with 22 seqs in 1.3s (1.1s of which was running bppseqgen)
      total time: 1.7

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-6.nwk
    made 6 events with 30 seqs in 1.2s (1.1s of which was running bppseqgen)
      total time: 1.5

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-5.nwk
    made 6 events with 27 seqs in 1.3s (1.2s of which was running bppseqgen)
      total time: 1.6

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-1.nwk
    made 6 events with 49 seqs in 1.5s (1.4s of which was running bppseqgen)
      total time: 1.9

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-2.nwk
    made 6 events with 43 seqs in 1.5s (1.4s of which was running bppseqgen)
      total time: 1.9

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-3.nwk
    made 6 events with 41 seqs in 1.5s (1.4s of which was running bppseqgen)
      total time: 1.9

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/8713/trees-sub-8.nwk
    made 6 events with 69 seqs in 1.5s (1.4s of which was running bppseqgen)
      total time: 1.7

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igh/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igh/hmm
    resetting --n-trees from 200 to 12 to match trees read from /tmp/dralph/hmms/8713/trees-sub-9.nwk
    made 12 events with 99 seqs in 2.5s (2.2s of which was running bppseqgen)
      total time: 2.8

   read 66 events with 426 seqs from 10 .yaml files
      total time: 3.7
[44msimulate[0m [94migh+igl[0m:[94m igl[0m
[91mrun[0m /home/dralph/work/partis/bin/partis simulate --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/data/igl --n-sim-events 66 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --min-observations-per-gene 5 --mean-cells-per-droplet 1.5 --constant-cells-per-droplet --fraction-of-reads-to-remove 0.15 --random-seed 1456246501 --n-procs 10 --indel-frequency 0.2 --choose-trees-in-order --outfname test/paired/new-results-slow/test/simu/igh+igl/igl.yaml --input-simulation-treefname test/paired/new-results-slow/test/simu/igh+igl/trees.nwk
simulating
      --> proc 0
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-0.nwk
    made 6 events with 15 seqs in 0.8s (0.7s of which was running bppseqgen)
      total time: 1.2

      --> proc 4
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-4.nwk
    made 6 events with 22 seqs in 0.8s (0.7s of which was running bppseqgen)
      total time: 1.2

      --> proc 6
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-6.nwk
    made 6 events with 30 seqs in 1.0s (0.8s of which was running bppseqgen)
      total time: 1.3

      --> proc 1
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-1.nwk
    made 6 events with 49 seqs in 1.0s (0.9s of which was running bppseqgen)
      total time: 1.4

      --> proc 3
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-3.nwk
    made 6 events with 41 seqs in 1.1s (0.9s of which was running bppseqgen)
      total time: 1.4

      --> proc 5
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-5.nwk
    made 6 events with 27 seqs in 1.1s (0.9s of which was running bppseqgen)
      total time: 1.4

      --> proc 7
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-7.nwk
    made 6 events with 31 seqs in 1.1s (1.0s of which was running bppseqgen)
      total time: 1.3

      --> proc 2
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-2.nwk
    made 6 events with 43 seqs in 1.2s (1.1s of which was running bppseqgen)
      total time: 1.6

      --> proc 8
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 6 to match trees read from /tmp/dralph/hmms/701627/trees-sub-8.nwk
    made 6 events with 69 seqs in 1.3s (1.2s of which was running bppseqgen)
      total time: 1.6

      --> proc 9
    reco params: test/paired/new-results-slow/test/parameters/data/igl/hmm     shm params: test/paired/new-results-slow/test/parameters/data/igl/hmm
    resetting --n-trees from 200 to 12 to match trees read from /tmp/dralph/hmms/701627/trees-sub-9.nwk
    made 12 events with 99 seqs in 2.2s (2.0s of which was running bppseqgen)
      total time: 2.5

   read 66 events with 426 seqs from 10 .yaml files
      total time: 3.4
[94migh+igk[0m: synchronizing heavy and light chain simulation trees and rewriting output files in test/paired/new-results-slow/test/simu/igh+igk/
[94migh+igl[0m: synchronizing heavy and light chain simulation trees and rewriting output files in test/paired/new-results-slow/test/simu/igh+igl/
  apportioned 2346 seqs among 782 droplets (mean/2 1.5): 2 4 2 4 4 2 4 4 2 4 2 4 4 4 4 2 4 4 4 4 2 4 2 4 2 4 4 4 2 2 2 2 4 4 2 2 4 4 2 4 4 2 4 2 2 2 4 4 4 4 2 4 4 4 2 2 4 4 4 4 2 2 4 4 2 4 2 4 4 4 4 2 4 4 2 4 4 4 4 4 4 4 2 2 4 4 2 2 2 2 4 4 2 2 4 2 2 2 4 2 4 4 4 4 2 4 4 2 2 4 2 2 2 2 4 4 4 2 2 4 2 4 2 4 2 4 2 4 4 4 4 4 4 4 2 2 2 2 2 2 2 4 2 2 4 2 4 2 4 4 4 4 4 4 2 2 2 4 2 4 4 2 2 4 4 4 4 4 4 4 2 4 4 2 4 4 2 2 2 4 2 4 2 2 2 2 4 4 4 2 2 2 4 2 4 2 2 2 2 4 2 4 4 2 2 4 4 2 4 2 2 2 2 4 2 2 2 4 4 2 2 2 2 2 2 2 2 4 4 4 4 2 2 2 2 4 2 4 4 4 2 4 4 4 4 2 4 4 4 4 4 2 4 2 4 2 2 2 4 4 2 2 4 4 2 2 2 2 4 4 2 4 4 4 4 2 4 4 2 2 2 2 2 2 4 4 2 2 4 2 4 4 4 4 4 4 4 2 2 4 2 2 4 4 4 4 4 4 4 2 2 2 2 4 4 4 4 2 2 2 2 2 4 2 2 4 2 2 2 2 2 2 4 2 4 2 4 4 2 2 4 2 4 2 4 2 2 4 2 2 2 4 2 2 2 4 2 2 4 4 4 4 4 4 2 2 4 2 4 2 4 4 2 4 4 4 2 4 2 4 4 2 2 4 4 2 2 4 4 2 4 2 2 2 2 2 4 4 4 4 4 4 4 4 4 2 4 4 4 2 2 4 4 2 4 2 2 2 4 4 2 2 4 4 2 2 2 2 2 2 2 4 2 2 2 4 2 2 2 2 2 4 2 4 4 4 4 4 2 2 2 2 2 2 4 2 2 4 2 2 4 4 2 4 2 4 4 4 2 4 4 2 4 4 4 4 2 2 4 4 2 4 4 2 4 2 4 2 2 2 2 2 2 4 4 4 4 2 4 2 4 2 2 4 4 4 4 4 2 4 2 2 4 4 4 4 2 2 4 4 2 4 2 2 2 4 4 2 2 2 2 2 4 4 4 2 4 2 2 4 2 2 4 4 2 2 2 4 2 4 2 4 4 2 4 2 2 2 4 4 4 2 4 4 4 4 4 4 2 2 2 2 4 4 2 4 2 2 2 4 4 2 2 4 2 2 4 4 4 4 2 4 2 4 2 2 4 2 2 2 2 4 4 4 4 4 2 2 4 4 4 4 2 2 2 4 4 2 2 4 2 2 2 2 4 2 4 2 4 2 4 2 4 2 2 4 4 2 4 4 2 2 2 2 4 2 4 4 2 4 4 4 2 4 2 2 2 2 2 4 4 4 4 4 4 2 4 4 2 2 2 4 4 4 4 4 2 2 2 2 4 2 2 2 4 2 4 2 2 2 4 4 4 4 2 2 4 2 2 2 2 2 4 2 2 4 4 2 4 2 2 4 4 4 4 4 2 4 4 2 4 4 2 2 4 4 2 2 2 4 2 2 2 2 2 2 2 2 2 4 2 4 2 2 2 2 4 4 2 4 2 2 4 2 4 2 2 4 2 2 4 2 4 2 4 2 4 4 2 2 2 4 4 2 2 2 4 2 4 2 4 4
  removed 351 / 2346 = 0.15 seqs from outfos (leaving 112 / 1995 unpaired)
      total time: 23.1
[92mcache-parameters-simu[0m            /home/dralph/work/partis/bin/partis cache-parameters --dont-write-git-info --paired-loci --paired-indir test/paired/new-results-slow/test/simu --parameter-dir test/paired/new-results-slow/test/parameters/simu --is-simu --random-seed 1 --n-procs 10
  note: --paired-outdir is not set, so there will be no persistent record of the results (except the parameter directory).
[44mcache-parameters[0m [94migh[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --is-simu --random-seed 1 --n-procs 10 --infname test/paired/new-results-slow/test/simu/igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 1000 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
caching parameters
  vsearch: 1000 / 1000 v annotations (0 failed) with 45 v genes in 0.2 sec
    keeping 23 / 220 v genes
smith-waterman  (new-allele fitting)
  vsearch: 1000 / 1000 v annotations (0 failed) with 23 v genes in 0.3 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
    running 10 procs for 1000 seqs
    running 11 procs for 52 seqs
      info for 1000 / 1000 = 1.000   (removed: 0 failed)
      kept 362 (0.362) unproductive
    water time: 1.4  (ig-sw 0.1  processing 0.2)
smith-waterman  (writing parameters)
  vsearch: 1000 / 1000 v annotations (0 failed) with 23 v genes in 0.2 sec
    running 10 procs for 1000 seqs
    running 11 procs for 52 seqs
      info for 1000 / 1000 = 1.000   (removed: 0 failed)
      kept 362 (0.362) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igh/sw (1.6 sec)
    water time: 3.7  (ig-sw 2.2  processing 0.3)
  writing hmms (0.3 sec)
hmm
    skipping matches from 3 genes without enough counts: [95mh[0m[91mj[0m[95m6[0m[93m04[0m [95mh[0m[91mj[0m[95m6[0m[93m03[0m [95mh[0m[91mj[0m[95m5[0m[93m01[0m
    reading output
        read 1000 hmm output lines with 1000 sequences in 1000 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igh/hmm (1.5 sec)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igh/true (1.4 sec)
         infra time: 4.4
      hmm step time: 6.3
  writing hmms (0.3 sec)
      total time: 14.1
[44mcache-parameters[0m [94migk[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --is-simu --random-seed 1 --n-procs 10 --infname test/paired/new-results-slow/test/simu/igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 640 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
caching parameters
  vsearch: 640 / 640 v annotations (0 failed) with 17 v genes in 0.1 sec
    keeping 16 / 58 v genes
smith-waterman  (new-allele fitting)
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
    running 10 procs for 640 seqs
    running 11 procs for 12 seqs
      info for 640 / 640 = 1.000   (removed: 0 failed)
      kept 104 (0.163) unproductive
    water time: 0.7  (ig-sw 0.1  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
    running 10 procs for 640 seqs
    running 11 procs for 12 seqs
      info for 640 / 640 = 1.000   (removed: 0 failed)
      kept 104 (0.163) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igk/sw (1.4 sec)
    water time: 2.5  (ig-sw 1.7  processing 0.2)
  writing hmms (0.1 sec)
hmm
    skipping matches from 2 genes without enough counts: [95mk[0m[91mj[0m[95m4[0m[93m02[0m [95mk[0m[91mj[0m[95m2[0m[93m02[0m
    reading output
        read 640 hmm output lines with 640 sequences in 640 events  (0 failures)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igk/hmm (1.1 sec)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igk/true (1.1 sec)
         infra time: 3.4
      hmm step time: 4.4
  writing hmms (0.3 sec)
      total time: 9.1
[44mcache-parameters[0m [94migl[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis cache-parameters --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --is-simu --random-seed 1 --n-procs 10 --infname test/paired/new-results-slow/test/simu/igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 355 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
caching parameters
  vsearch: 355 / 355 v annotations (0 failed) with 11 v genes in 0.1 sec
    keeping 10 / 70 v genes
smith-waterman  (new-allele fitting)
  vsearch: 355 / 355 v annotations (0 failed) with 10 v genes in 0.2 sec
  removing old sw cache test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
    running 10 procs for 355 seqs
    running 11 procs for 6 seqs
      info for 355 / 355 = 1.000   (removed: 0 failed)
      kept 72 (0.203) unproductive
    water time: 0.4  (ig-sw 0.0  processing 0.1)
smith-waterman  (writing parameters)
  vsearch: 355 / 355 v annotations (0 failed) with 10 v genes in 0.1 sec
    running 10 procs for 355 seqs
    running 11 procs for 6 seqs
      info for 355 / 355 = 1.000   (removed: 0 failed)
      kept 72 (0.203) unproductive
        writing sw results to test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igl/sw (0.8 sec)
    water time: 1.4  (ig-sw 1.0  processing 0.1)
  writing hmms (0.2 sec)
hmm
    reading output
        read 355 hmm output lines with 353 sequences in 353 events  (2 failures)
          [91mwarning[0m no valid paths: 5641474851525436229-igl 2198347140778209734-igl
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igl/hmm (0.6 sec)
    writing parameters to test/paired/new-results-slow/test/parameters/simu/igl/true (0.6 sec)
         infra time: 2.0
      hmm step time: 2.6
  writing hmms (0.1 sec)
      total time: 5.4
      total time: 29.6
[92mpartition-new-simu[0m               /home/dralph/work/partis/bin/partis partition --dont-write-git-info --paired-loci --paired-indir test/paired/new-results-slow/test/simu --parameter-dir test/paired/new-results-slow/test/parameters/simu --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/partition-new-simu
  [93mwarning[0m ignoring --plot-annotation-performance for paired clustering since it's going to be a bit fiddly to implement
[44mpartition[0m [94migh[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance/single-chain/plots/igh --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/test/simu/igh.yaml --outfname test/paired/new-results-slow/partition-new-simu/single-chain/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 1000 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 1000 / 1000 v annotations (0 failed) with 23 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 1000 / 1000 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 362 (0.362) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 60 queries with different true and inferred net shm indel lengths: 4192068443523205981-igh 3344153475914336323-igh 1202949175819197746-igh 8034210568695520943-igh 5235663855169387750-igh 5615089169204214323-igh 9205266174301842569-igh 3050253348688105500-igh 8969176644417932865-igh 7682485172737982251-igh 0597718852660649256-igh 7629792630742498808-igh 2777174777771684527-igh 4608757704775049090-igh 0382698166016426951-igh 8534652470420476999-igh 1518467750867165802-igh 5188001054004936734-igh 6894481868764512496-igh 2724108028195531205-igh 5264619182804074939-igh 5962962771298656083-igh 0146805805939391560-igh 4773789714601703176-igh 6926934037249415110-igh 5535231431895011600-igh 3647098539805060335-igh 4548314598443047427-igh 0519450483773894785-igh 8826175195458224953-igh 1383512084509220405-igh 2693734392910219054-igh 8655698202831101057-igh 3734427732220219254-igh 7584179207649415216-igh 4847540134030695462-igh 3916124757125782793-igh 0161606783835244621-igh 3729233455894130421-igh 5547404517180313400-igh 2632568693062682293-igh 8491734797531648044-igh 1891024981741873852-igh 0642147441991752901-igh 0960715752824823700-igh 2011934737232710316-igh 8484652898258995600-igh 5735323184917054667-igh 4262800480392836293-igh 6471094595481694140-igh 8480892480895180921-igh 2476414678775607200-igh 5479979364695988617-igh 5112953187350510314-igh 0914756165645325536-igh 7275730084457077662-igh 2308552076047697183-igh 2387080066609923455-igh 1264885607107417547-igh 2216147249973404315-igh
(0.0 sec)
        water time: 1.0
hmm
  caching all 1000 naive sequences (1.9s)
   collapsed 1000 queries into 454 clusters with identical naive seqs (0.0 sec)
  454 clusters with 10 procs (2.3s)
  361 clusters with 7 procs (1.6s)
  308 clusters with 5 procs (2.5s)
  257 clusters with 3 procs (2.7s)
  221 clusters with 2 procs (5.3s)
  193 clusters with 2 procs (3.3s)
  187 clusters with 2 procs (0.9s)
  185 clusters with 1 proc (3.0s)
  [93mnote[0m not merging entire cpath history
      partition loop time: 21.6
getting annotations for final partition
  subcluster annotating 183 clusters with steps:  (1.8s) (0.9s) (0.5s) (0.3s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 60 queries with different true and inferred net shm indel lengths: 8969176644417932865-igh 5962962771298656083-igh 2777174777771684527-igh 0146805805939391560-igh 0161606783835244621-igh 6471094595481694140-igh 2632568693062682293-igh 1891024981741873852-igh 2011934737232710316-igh 5735323184917054667-igh 8484652898258995600-igh 4262800480392836293-igh 8491734797531648044-igh 8480892480895180921-igh 0960715752824823700-igh 3916124757125782793-igh 0642147441991752901-igh 8655698202831101057-igh 5615089169204214323-igh 0519450483773894785-igh 4847540134030695462-igh 1383512084509220405-igh 1518467750867165802-igh 3729233455894130421-igh 0382698166016426951-igh 0597718852660649256-igh 0914756165645325536-igh 1202949175819197746-igh 1264885607107417547-igh 2216147249973404315-igh 2308552076047697183-igh 2387080066609923455-igh 2476414678775607200-igh 2693734392910219054-igh 2724108028195531205-igh 3050253348688105500-igh 3344153475914336323-igh 3647098539805060335-igh 3734427732220219254-igh 4192068443523205981-igh 4548314598443047427-igh 4608757704775049090-igh 4773789714601703176-igh 5112953187350510314-igh 5188001054004936734-igh 5235663855169387750-igh 5264619182804074939-igh 5479979364695988617-igh 5535231431895011600-igh 5547404517180313400-igh 6894481868764512496-igh 6926934037249415110-igh 7275730084457077662-igh 7584179207649415216-igh 7629792630742498808-igh 7682485172737982251-igh 8034210568695520943-igh 8534652470420476999-igh 8826175195458224953-igh 9205266174301842569-igh
(0.0 sec)

    subcluster annotation time 6.0
      total time: 31.5
[44mpartition[0m [94migk[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance/single-chain/plots/igk --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/test/simu/igk.yaml --outfname test/paired/new-results-slow/partition-new-simu/single-chain/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 640 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 640 / 640 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 104 (0.163) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 23 queries with different true and inferred net shm indel lengths: 0515260043455636484-igk 2975541313160084247-igk 7675054709541274093-igk 0531663798372164401-igk 8446875149878856061-igk 6851776658586386056-igk 7693481556048738438-igk 0214417136935543342-igk 4298416357202104977-igk 3350624392108677302-igk 8025203209748248734-igk 6653034035666474287-igk 5345683336122321701-igk 0078203303789609435-igk 1148690771713848094-igk 1259828056574908624-igk 3721784662459920788-igk 4581021426518923022-igk 2838638195647889098-igk 2659599773997899895-igk 4542591872697134459-igk 3772548365632771450-igk 8401124037514061184-igk
(0.0 sec)
        water time: 0.7
hmm
  caching all 640 naive sequences (1.0s)
   collapsed 640 queries into 56 clusters with identical naive seqs (0.0 sec)
  56 clusters with 10 procs (0.4s)
  55 clusters with 7 procs (0.4s)
  52 clusters with 5 procs (0.3s)
  51 clusters with 3 procs (0.3s)
  49 clusters with 2 procs (0.3s)
  48 clusters with 1 proc (1.0s)
      partition loop time: 2.7
getting annotations for final partition
  subcluster annotating 47 clusters with steps:  (1.3s) (0.6s) (0.3s) (0.1s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 23 queries with different true and inferred net shm indel lengths: 0214417136935543342-igk 8401124037514061184-igk 2975541313160084247-igk 7675054709541274093-igk 0515260043455636484-igk 2659599773997899895-igk 0531663798372164401-igk 4298416357202104977-igk 5345683336122321701-igk 1259828056574908624-igk 6851776658586386056-igk 0078203303789609435-igk 1148690771713848094-igk 2838638195647889098-igk 3350624392108677302-igk 3721784662459920788-igk 3772548365632771450-igk 4542591872697134459-igk 4581021426518923022-igk 6653034035666474287-igk 7693481556048738438-igk 8025203209748248734-igk 8446875149878856061-igk
(0.0 sec)

    subcluster annotation time 3.0
      total time: 8.0
[44mpartition[0m [94migl[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --plotdir test/paired/new-results-slow/partition-new-simu-annotation-performance/single-chain/plots/igl --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/test/simu/igl.yaml --outfname test/paired/new-results-slow/partition-new-simu/single-chain/partition-igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 355 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igl/hmm)
smith-waterman
  vsearch: 355 / 355 v annotations (0 failed) with 10 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
      info for 355 / 355 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 72 (0.203) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 13 queries with different true and inferred net shm indel lengths: 6302753673530959145-igl 7274351964588328571-igl 6074591113755965332-igl 0748472840241894389-igl 3613294917954346973-igl 2198347140778209734-igl 7410197645865402313-igl 2910059741635412079-igl 8773180209828893303-igl 5641474851525436229-igl 4715405941622985518-igl 7698768102636357101-igl 2578535683205410191-igl
(0.0 sec)
        water time: 0.6
hmm
  caching all 355 naive sequences (0.6s)
    [93mwarning:[0m missing 2 queries from hmm cache file (using sw naive sequence instead): 5641474851525436229-igl 2198347140778209734-igl
   collapsed 355 queries into 31 clusters with identical naive seqs (0.0 sec)
  31 clusters with 10 procs (0.4s)
  28 clusters with 7 procs (0.3s)
  28 clusters with 5 procs (0.2s)
  26 clusters with 3 procs (0.3s)
  23 clusters with 2 procs (0.1s)
  22 clusters with 1 proc (0.7s)
      partition loop time: 2.0
getting annotations for final partition
  subcluster annotating 19 clusters with steps:            [91mwarning[0m no valid paths: 5641474851525436229-igl 2198347140778209734-igl
(0.8s)     missing 2 annotations
      removing failed cluster for 2198347140778209734-igl:
      removing failed cluster for 5641474851525436229-igl:
(0.4s) (0.2s) (0.2s) (0.1s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 11 queries with different true and inferred net shm indel lengths: 7410197645865402313-igl 6302753673530959145-igl 7698768102636357101-igl 7274351964588328571-igl 8773180209828893303-igl 0748472840241894389-igl 2578535683205410191-igl 2910059741635412079-igl 3613294917954346973-igl 4715405941622985518-igl 6074591113755965332-igl
(0.0 sec)

    subcluster annotation time 2.0
      total time: 5.6
[44mcombining[0m chains
      removed 2 failed queries when reading partition: 5641474851525436229-igl 2198347140778209734-igl
   cleaning pair info for 1993 seqs
   5/1993 (0.00) missing uids when cleaning pair info
     synchronized/fixed 0 pairs where one had no pair info after cleaning: [94mh[0m 0  [95mk[0m 0  [92ml[0m 0
    truncating x bins 3 --> 12 and ybins 5 --> 12
    truncating x bins 6 --> 15 and ybins 16 --> 15
[94migh+igk[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:      [93mwarning[0m adding missing per-seq key: mut_positions
  note: added 1 new input meta key to allowed keys (add 's'/plural to access it in the final annotations): mut_position (mut_positions)
230 total unpaired,  [94mh[0m 144  [95mk[0m 86
    merging igh+igk partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m  123 --> 174  [91m+51[0m
        [95mk[0m   43 --> 174  [91m+131[0m
    re-added unpaired seqs ([94mh[0m 144, [95mk[0m 86) to give total seqs in joint partitions: [94mh[0m 698  [95mk[0m 640
    [93mwarning[0m removed 13/641 uids (leaving 628) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m added 50 / 698 missing ids as singletons to true partition, to match ids in inferred partition (restricting to unpaired_uids, i.e. probably these were unpaired seqs that were re-added to the inferred partition, but in the true partition were paired with the other chain)
    [93mwarning[0m added 20 / 698 missing ids as singletons to true partition, to match ids in inferred partition (giving up and adding whatever is needed, which is sometimes/maybe just from mispaired seqs)
  [94mh[0m ccfs:     purity  completeness
      single   0.807  0.901
       joint   0.926  0.868
  [95mk[0m ccfs:     purity  completeness
      single   0.400  0.969
       joint   0.879  0.764
  merge time 0.0
  need to get annotations for 180/212 joint igh clusters
[44mannotate[0m [94migh+igk[0m:[94m igh[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igk/input-seqs-igh.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igh.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh-only-partition.yaml
  --input-metafnames: added meta info for 698 sequences from test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igh.yaml: paired-uids loci
  --input-partition-fname: read best partition with 698 sequences in 212 clusters from test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 698 / 698 v annotations (0 failed) with 23 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 698 / 698 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 255 (0.365) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3203122467716491719-igh': [[u'3203122467716491719-igk', u'1800142422104931270-igk', u'1800142422104931270-igh']] --> [[u'3203122467716491719-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3926493268827655903-igh': [[u'3926493268827655903-igk', u'0457245606032802788-igl', u'0457245606032802788-igh']] --> [[u'3926493268827655903-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5171128168862809856-igh': [[u'5171128168862809856-igk', u'4980246375282440960-igk']] --> [[u'5171128168862809856-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6104752918040511656-igh': [[u'1767611730716028444-igl', u'1767611730716028444-igh', u'6104752918040511656-igk']] --> [[u'6104752918040511656-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2600239806918866386-igh': [[u'2600239806918866386-igk', u'2790800398366108747-igl', u'2790800398366108747-igh']] --> [[u'2600239806918866386-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3590463765566689509-igh': [[u'2838638195647889098-igk', u'2838638195647889098-igh', u'3590463765566689509-igk']] --> [[u'3590463765566689509-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3810492694341242408-igh': [[u'3810492694341242408-igk', u'1850131945780139389-igk', u'1850131945780139389-igh']] --> [[u'3810492694341242408-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3689563389420056256-igh': [[u'3689563389420056256-igk', u'1682788086367546172-igh', u'1682788086367546172-igk']] --> [[u'3689563389420056256-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3320869507417607437-igh': [[u'0376400657424705652-igh']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0039784956805267814-igh': [[u'7688800932718159958-igh', u'7688800932718159958-igk']] --> [[u'7688800932718159958-igk']]
[93mwarning[0m replaced input metafo for 1 total key in 448 seqs (448 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      698        0      698        0        0
             paired-uids        0      698        0      250        0      448
        water time: 0.3
hmm
  subcluster annotating 212 clusters with steps:  (1.5s) (0.7s) (0.3s) (0.2s) 
    subcluster annotation time 2.8
      total time: 3.4
  need to get annotations for 170/178 joint igk clusters
[44mannotate[0m [94migh+igk[0m:[94m igk[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igk/input-seqs-igk.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igk.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk-only-partition.yaml
  --input-metafnames: added meta info for 640 sequences from test/paired/new-results-slow/partition-new-simu/igh+igk/meta-igk.yaml: paired-uids loci
  --input-partition-fname: read best partition with 640 sequences in 178 clusters from test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 640 / 640 v annotations (0 failed) with 16 v genes in 0.2 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 640 / 640 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 104 (0.163) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3203122467716491719-igk': [[u'3203122467716491719-igh', u'1800142422104931270-igk', u'1800142422104931270-igh']] --> [[u'3203122467716491719-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3926493268827655903-igk': [[u'3926493268827655903-igh', u'0457245606032802788-igl', u'0457245606032802788-igh']] --> [[u'3926493268827655903-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5171128168862809856-igk': [[u'5171128168862809856-igh', u'4980246375282440960-igk']] --> [[u'5171128168862809856-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6104752918040511656-igk': [[u'1767611730716028444-igl', u'1767611730716028444-igh', u'6104752918040511656-igh']] --> [[u'6104752918040511656-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2600239806918866386-igk': [[u'2600239806918866386-igh', u'2790800398366108747-igl', u'2790800398366108747-igh']] --> [[u'2600239806918866386-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3590463765566689509-igk': [[u'2838638195647889098-igk', u'2838638195647889098-igh', u'3590463765566689509-igh']] --> [[u'3590463765566689509-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3810492694341242408-igk': [[u'3810492694341242408-igh', u'1850131945780139389-igk', u'1850131945780139389-igh']] --> [[u'3810492694341242408-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3689563389420056256-igk': [[u'3689563389420056256-igh', u'1682788086367546172-igh', u'1682788086367546172-igk']] --> [[u'3689563389420056256-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7688800932718159958-igk': [[u'0039784956805267814-igh', u'7688800932718159958-igh']] --> [[u'0039784956805267814-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4770667836393603298-igk': [[u'4770667836393603298-igh', u'3842435962583128456-igk']] --> [[u'4770667836393603298-igh']]
[93mwarning[0m replaced input metafo for 1 total key in 410 seqs (410 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      640        0      640        0        0
             paired-uids        0      640        0      230        0      410
        water time: 0.2
hmm
  [93mwarning[0m split apart 3 clusters that contained multiple cdr3 lengths (total clusters: 178 --> 183)
      cluster splits:   2 --> 1 1,   6 --> 1 1 4,   6 --> 1 3 2
  subcluster annotating 183 clusters with steps:  (1.3s) (0.5s) (0.2s) (0.1s) 
    subcluster annotation time 2.2
      total time: 2.7
[94migh+igl[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:  195 total unpaired,  [94mh[0m 144  [92ml[0m 51
    merging igh+igl partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m   73 --> 90   [91m+17[0m
        [92ml[0m   14 --> 90   [91m+76[0m
    re-added unpaired seqs ([94mh[0m 144, [92ml[0m 51) to give total seqs in joint partitions: [94mh[0m 446  [92ml[0m 353
    [93mwarning[0m removed 20/359 uids (leaving 339) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m added 94 / 446 missing ids as singletons to true partition, to match ids in inferred partition (restricting to unpaired_uids, i.e. probably these were unpaired seqs that were re-added to the inferred partition, but in the true partition were paired with the other chain)
    [93mwarning[0m added 13 / 446 missing ids as singletons to true partition, to match ids in inferred partition (giving up and adding whatever is needed, which is sometimes/maybe just from mispaired seqs)
  [94mh[0m ccfs:     purity  completeness
      single   0.807  0.901
       joint   0.856  0.862
    [93mwarning[0m removed 2/355 uids (leaving 353) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 2/355 uids (leaving 353) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
  [92ml[0m ccfs:     purity  completeness
      single   0.306  0.971
       joint   0.870  0.723
  merge time 0.0
  need to get annotations for 125/151 joint igh clusters
[44mannotate[0m [94migh+igl[0m:[94m igh[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igl/input-seqs-igh.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igh.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh-only-partition.yaml
  --input-metafnames: added meta info for 446 sequences from test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igh.yaml: paired-uids loci
  --input-partition-fname: read best partition with 446 sequences in 151 clusters from test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 446 / 446 v annotations (0 failed) with 22 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 446 / 446 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 161 (0.361) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4489787302060078124-igh': [[u'1127310571846829490-igh', u'1127310571846829490-igl', u'4489787302060078124-igl']] --> [[u'4489787302060078124-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0526793195386432815-igh': [[u'0960715752824823700-igh', u'0526793195386432815-igl']] --> [[u'0526793195386432815-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1016518942290416082-igh': [[u'4668341497387149342-igk', u'1016518942290416082-igl']] --> [[u'1016518942290416082-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0078203303789609435-igh': [[u'1088749980415660516-igk', u'1088749980415660516-igh', u'0078203303789609435-igk']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1210468314540944688-igh': [[u'9175183096912948842-igh']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2911453726728538363-igh': [[u'0531663798372164401-igh', u'0531663798372164401-igk']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1123081631537330843-igh': [[u'0605436960283742311-igh', u'0605436960283742311-igl', u'1123081631537330843-igl']] --> [[u'1123081631537330843-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7317912441508657964-igh': [[u'7317912441508657964-igl', u'3106904650086857185-igh', u'3106904650086857185-igl']] --> [[u'7317912441508657964-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '6865046041316352084-igh': [[u'6865046041316352084-igk', u'7274351964588328571-igh', u'7274351964588328571-igl']] --> [[u'7274351964588328571-igl']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5215778925768629320-igh': [[u'4712143646854863322-igk', u'4712143646854863322-igh', u'5215778925768629320-igl']] --> [[u'5215778925768629320-igl']]
[93mwarning[0m replaced input metafo for 1 total key in 282 seqs (282 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      446        0      446        0        0
             paired-uids        0      446        0      164        0      282
        water time: 0.3
hmm
  subcluster annotating 151 clusters with steps:  (1.1s) (0.5s) (0.3s) 
    subcluster annotation time 2.0
      total time: 2.4
  need to get annotations for 90/93 joint igl clusters
[44mannotate[0m [94migh+igl[0m:[94m igl[0m
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --max-ccf-fail-frac 0.10 --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/partition-new-simu/igh+igl/input-seqs-igl.fa --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igl.yaml --input-partition-fname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl-only-partition.yaml
  --input-metafnames: added meta info for 353 sequences from test/paired/new-results-slow/partition-new-simu/igh+igl/meta-igl.yaml: paired-uids loci
  --input-partition-fname: read best partition with 353 sequences in 93 clusters from test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igl/hmm)
smith-waterman
  vsearch: 353 / 353 v annotations (0 failed) with 10 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
      info for 353 / 353 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 70 (0.198) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4489787302060078124-igl': [[u'1127310571846829490-igh', u'1127310571846829490-igl', u'4489787302060078124-igh']] --> [[u'4489787302060078124-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0526793195386432815-igl': [[u'0526793195386432815-igh', u'0960715752824823700-igh']] --> [[u'0526793195386432815-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1016518942290416082-igl': [[u'4668341497387149342-igk', u'1016518942290416082-igh']] --> [[u'1016518942290416082-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '1123081631537330843-igl': [[u'0605436960283742311-igh', u'0605436960283742311-igl', u'1123081631537330843-igh']] --> [[u'1123081631537330843-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7317912441508657964-igl': [[u'7317912441508657964-igh', u'3106904650086857185-igh', u'3106904650086857185-igl']] --> [[u'7317912441508657964-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '0840800137072506659-igl': [[u'2609589689827582429-igh', u'2609589689827582429-igk']] --> [[]]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '7274351964588328571-igl': [[u'6865046041316352084-igk', u'6865046041316352084-igh', u'7274351964588328571-igh']] --> [[u'6865046041316352084-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5215778925768629320-igl': [[u'4712143646854863322-igk', u'4712143646854863322-igh', u'5215778925768629320-igh']] --> [[u'5215778925768629320-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5971731437698957774-igl': [[u'5971731437698957774-igh', u'0676866336679508987-igh', u'0676866336679508987-igk']] --> [[u'5971731437698957774-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3412037317265416968-igl': [[u'3412037317265416968-igh', u'3772548365632771450-igh', u'3772548365632771450-igk']] --> [[u'3772548365632771450-igh']]
[93mwarning[0m replaced input metafo for 1 total key in 225 seqs (225 clusters): paired-uids (see above, only printed the first 10 clusters)
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0      353        0      353        0        0
             paired-uids        0      353        0      128        0      225
        water time: 0.1
hmm
  [93mwarning[0m split apart 2 clusters that contained multiple cdr3 lengths (total clusters: 93 --> 95)
      cluster splits:   9 --> 8 1,   2 --> 1 1
  subcluster annotating 95 clusters with steps:  (0.8s) (0.3s) (0.1s) 
    subcluster annotation time 1.3
      total time: 1.6
   N clusters with all seqs:
        [94mh[0m  183 --> 302  [91m+119[0m
        [95mk[0m   47 --> 178  [91m+131[0m
        [92ml[0m   17 --> 93   [91m+76[0m
      total time: 60.7
[92mseed-partition-new-simu[0m          /home/dralph/work/partis/bin/partis partition --dont-write-git-info --paired-loci --paired-indir test/paired/new-results-slow/test/simu --parameter-dir test/paired/new-results-slow/test/parameters/simu --max-ccf-fail-frac 0.10 --is-simu --seed-unique-id 0515260043455636484-igh:0515260043455636484-igk --seed-loci igh:igk --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/seed-partition-new-simu
   removing seqs very different from seed seq
                           wrong/no     removed      singly         kept   missing
           locus  before   pairing    cdr3  hfrac    added   after  frac   true ids
             [94mh[0m     1000      806       171    16       10      17   0.017    [91m1[0m
             [95mk[0m      640      446       171    16       29      36   0.056    [91m1[0m
     adding seqs paired with uids we kept
           locus  before  added  after  kept frac
             [94mh[0m      17      41     58    0.058
             [95mk[0m      36      16     52    0.081
             [92ml[0m       0      10     10    0.028
      taken 53, paired with taken 67 (total 120)
[44mpartition[0m [94migh[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/single-chain/input-seqs-igh.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/single-chain/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 58 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 58 / 58 v annotations (0 failed) with 12 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 58 / 58 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 17 (0.293) unproductive
        water time: 0.1
hmm
  caching all 58 naive sequences (0.4s)
   collapsed 58 queries into 36 clusters with identical naive seqs (0.0 sec)
  36 clusters with 10 procs (0.2s)
  36 clusters with 7 procs (0.2s)
  35 clusters with 5 procs (0.2s)
  35 clusters with 3 procs (0.4s)
  34 clusters with 2 procs (0.2s)
  33 clusters with 1 proc (0.7s)
      partition loop time: 1.9
getting annotations for final partition
  subcluster annotating 32 clusters with steps:  (0.4s) (0.1s) (0.1s) 
    subcluster annotation time 0.6
      total time: 3.2
[44mpartition[0m [94migk[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/single-chain/input-seqs-igk.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/single-chain/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 52 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 52 / 52 v annotations (0 failed) with 11 v genes in 0.1 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 52 / 52 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 11 (0.212) unproductive
        water time: 0.1
hmm
  caching all 52 naive sequences (0.2s)
   collapsed 52 queries into 15 clusters with identical naive seqs (0.0 sec)
  15 clusters with 10 procs (0.2s)
  15 clusters with 7 procs (0.2s)
  15 clusters with 5 procs (0.1s)
  15 clusters with 3 procs (0.2s)
  15 clusters with 2 procs (0.2s)
  14 clusters with 1 proc (0.4s)
      partition loop time: 1.3
getting annotations for final partition
  subcluster annotating 14 clusters with steps:  (0.3s) (0.1s) (0.1s) (0.1s) 
    subcluster annotation time 0.6
      total time: 2.3
[44mpartition[0m [94migl[0m:
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis partition --locus igl --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igl --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/single-chain/input-seqs-igl.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/single-chain/partition-igl.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml --input-metafnames test/paired/new-results-slow/test/simu/meta.yaml
  --input-metafnames: added meta info for 10 sequences from test/paired/new-results-slow/test/simu/meta.yaml: paired-uids loci
partitioning     (with test/paired/new-results-slow/test/parameters/simu/igl/hmm)
smith-waterman
  vsearch: 10 / 10 v annotations (0 failed) with 5 v genes in 0.0 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igl/sw-cache.yaml
      info for 10 / 10 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 2 (0.200) unproductive
        water time: 0.0
hmm
  caching all 10 naive sequences (0.1s)
   collapsed 10 queries into 6 clusters with identical naive seqs (0.0 sec)
  reducing n procs to number of clusters: 10 --> 6
  6 clusters with 6 procs (0.1s)
  6 clusters with 4 procs (0.1s)
  6 clusters with 3 procs (0.1s)
  6 clusters with 2 procs (0.1s)
  5 clusters with 1 proc (0.2s)
      partition loop time: 0.7
getting annotations for final partition
  subcluster annotating 5 clusters with steps:  (0.1s) (0.1s) 
    subcluster annotation time 0.2
      total time: 1.2
[44mcombining[0m chains
   cleaning pair info for 120 seqs
     synchronized/fixed 0 pairs where one had no pair info after cleaning: [94mh[0m 0  [95mk[0m 0  [92ml[0m 0
[94migh+igk[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:      [93mwarning[0m adding missing per-seq key: mut_positions
  note: added 1 new input meta key to allowed keys (add 's'/plural to access it in the final annotations): mut_position (mut_positions)
21 total unpaired,  [94mh[0m 11  [95mk[0m 10
    merging igh+igk partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m   18 --> 20   [91m+2[0m
        [95mk[0m    8 --> 20   [91m+12[0m
    re-added unpaired seqs ([94mh[0m 11, [95mk[0m 10) to give total seqs in joint partitions: [94mh[0m 53  [95mk[0m 52
    [93mwarning[0m removed 942/1000 uids (leaving 58) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 594/641 uids (leaving 47) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m added 4 / 53 missing ids as singletons to true partition, to match ids in inferred partition (restricting to unpaired_uids, i.e. probably these were unpaired seqs that were re-added to the inferred partition, but in the true partition were paired with the other chain)
    [93mwarning[0m added 2 / 53 missing ids as singletons to true partition, to match ids in inferred partition (giving up and adding whatever is needed, which is sometimes/maybe just from mispaired seqs)
  [94mh[0m ccfs:     purity  completeness
      single   1.000  1.000
       joint   1.000  1.000
    [93mwarning[0m removed 588/640 uids (leaving 52) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
    [93mwarning[0m removed 588/640 uids (leaving 52) from true partition that were not in inferred partition (probably either seqs that failed inference [if light chain] or mispaired seqs [if heavy chain])
  [95mk[0m ccfs:     purity  completeness
      single   0.500  1.000
       joint   1.000  0.778
  merge time 0.0
     removed 30 unseeded clusters (of 31 total, leaving 1) from igh joint partition
  need to get annotations for 1/1 joint igh clusters
  seed cluster size in best joint partition: 14, excluding seed seq: 13
[44mannotate[0m [94migh+igk[0m:[94m igh[0m
    removed 2 arg strs that were specific to action 'partition': --seed-unique-id 0515260043455636484-igh:0515260043455636484-igk
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igh --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igh --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/input-seqs-igh.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/partition-igh.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml --input-metafnames test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/meta-igh.yaml --input-partition-fname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/partition-igh-only-partition.yaml
  --input-metafnames: added meta info for 14 sequences from test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/meta-igh.yaml: paired-uids loci
  --input-partition-fname: read best partition with 14 sequences in 1 clusters from test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/partition-igh-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igh/hmm)
smith-waterman
  vsearch: 14 / 14 v annotations (0 failed) with 1 v gene in 0.0 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igh/sw-cache.yaml
      info for 14 / 14 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 3 (0.214) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '9220592361438166583-igh': [[u'6967432317848122439-igk', u'9220592361438166583-igk']] --> [[u'9220592361438166583-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5985384172875489319-igh': [[u'5985384172875489319-igk', u'5658992323217208152-igh', u'5658992323217208152-igk']] --> [[u'5985384172875489319-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3800059541212012373-igh': [[u'5735323184917054667-igl', u'5735323184917054667-igh', u'3800059541212012373-igk']] --> [[u'3800059541212012373-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2975541313160084247-igh': [[u'2975541313160084247-igk', u'9205266174301842569-igh', u'9205266174301842569-igk']] --> [[u'2975541313160084247-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '8776025731513881660-igh': [[u'0211874598203745598-igh', u'8776025731513881660-igk']] --> [[u'8776025731513881660-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3410818562608101963-igh': [[u'7189484199558430500-igh', u'3410818562608101963-igk']] --> [[u'3410818562608101963-igk']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4961183970982078756-igh': [[u'6728873402175495209-igh', u'6728873402175495209-igk', u'4961183970982078756-igk']] --> [[u'4961183970982078756-igk']]
[93mwarning[0m replaced input metafo for 1 total key in 7 seqs (7 clusters): paired-uids
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0       14        0       14        0        0
             paired-uids        0       14        0        7        0        7
        water time: 0.1
hmm
  subcluster annotating 1 cluster with steps:  (0.2s) (0.1s) (0.1s) 
    subcluster annotation time 0.4
      total time: 0.6
     removed 25 unseeded clusters (of 26 total, leaving 1) from igk joint partition
  need to get annotations for 1/1 joint igk clusters
  seed cluster size in best joint partition: 14, excluding seed seq: 13
[44mannotate[0m [94migh+igk[0m:[94m igk[0m
    removed 2 arg strs that were specific to action 'partition': --seed-unique-id 0515260043455636484-igh:0515260043455636484-igk
  note: adding input metafname from default location (test/paired/new-results-slow/test/simu/meta.yaml)
[91mrun[0m /home/dralph/work/partis/bin/partis annotate --locus igk --dont-write-git-info --parameter-dir test/paired/new-results-slow/test/parameters/simu/igk --max-ccf-fail-frac 0.10 --random-seed 1 --n-procs 10 --refuse-to-cache-parameters --infname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/input-seqs-igk.fa --outfname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/partition-igk.yaml --sw-cachefname test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml --input-metafnames test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/meta-igk.yaml --input-partition-fname test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/partition-igk-only-partition.yaml
  --input-metafnames: added meta info for 14 sequences from test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/meta-igk.yaml: paired-uids loci
  --input-partition-fname: read best partition with 14 sequences in 1 clusters from test/paired/new-results-slow/seed-partition-new-simu/seeds/0515260043455636484-igh+0515260043455636484-igk/igh+igk/partition-igk-only-partition.yaml
annotating    (with test/paired/new-results-slow/test/parameters/simu/igk/hmm)
smith-waterman
  vsearch: 14 / 14 v annotations (0 failed) with 1 v gene in 0.0 sec
        reading sw results from test/paired/new-results-slow/test/parameters/simu/igk/sw-cache.yaml
      info for 14 / 14 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 6 (0.429) unproductive
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '9220592361438166583-igk': [[u'6967432317848122439-igk', u'9220592361438166583-igh']] --> [[u'9220592361438166583-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '5985384172875489319-igk': [[u'5985384172875489319-igh', u'5658992323217208152-igh', u'5658992323217208152-igk']] --> [[u'5985384172875489319-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3800059541212012373-igk': [[u'5735323184917054667-igl', u'5735323184917054667-igh', u'3800059541212012373-igh']] --> [[u'3800059541212012373-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '2975541313160084247-igk': [[u'2975541313160084247-igh', u'9205266174301842569-igh', u'9205266174301842569-igk']] --> [[u'2975541313160084247-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '8776025731513881660-igk': [[u'8776025731513881660-igh', u'0211874598203745598-igh']] --> [[u'8776025731513881660-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '3410818562608101963-igk': [[u'3410818562608101963-igh', u'7189484199558430500-igh']] --> [[u'3410818562608101963-igh']]
  [93mwarning[0m replacing input metafo 'paired-uids' value for 1 seq cluster '4961183970982078756-igk': [[u'6728873402175495209-igh', u'6728873402175495209-igk', u'4961183970982078756-igh']] --> [[u'4961183970982078756-igh']]
[93mwarning[0m replaced input metafo for 1 total key in 7 seqs (7 clusters): paired-uids
  add_input_metafo(): transferring input metafo from <input_info> to <line> (counts in table are uids, not lines)
                            no-info  with-info  one-src ident. not-overwr. replaced
                    loci        0       14        0       14        0        0
             paired-uids        0       14        0        7        0        7
        water time: 0.1
hmm
  subcluster annotating 1 cluster with steps:  (0.1s) (0.1s) (0.1s) 
    subcluster annotation time 0.4
      total time: 0.5
[94migh+igl[0m: synchronizing heavy and light chain cluster paths
    removing badly paired seqs:  16 total unpaired,  [94mh[0m 11  [92ml[0m 5
    merging igh+igl partitions
  [93mwarning[0m paired uids in line, but <translate_pids> wasn't set, so they won't be translated
   N clusters without bad/unpaired seqs:
        [94mh[0m    4 --> 4   
        [92ml[0m    2 --> 4    [91m+2[0m
    re-added unpaired seqs ([94mh[0m 11, [92ml[0m 5) to give total seqs in joint partitions: [94mh[0m 16  [92ml[0m 10
  merge time 0.0
     removed 15 unseeded clusters (of 15 total, leaving 0) from igh joint partition
     removed 7 unseeded clusters (of 7 total, leaving 0) from igl joint partition
   N clusters with all seqs:
        [94mh[0m   32 --> 1    [91m-31[0m
        [95mk[0m   14 --> 1    [91m-13[0m
      total time: 10.5
[92mget-selection-metrics-new-simu[0m   /home/dralph/work/partis/bin/partis get-selection-metrics --dont-write-git-info --paired-loci --existing-output-run-cfg paired --random-seed 1 --n-procs 10 --paired-outdir test/paired/new-results-slow/partition-new-simu --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml
[44mget-selection-metrics[0m [94migh+igk[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igh --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
  getting selection metrics: lbi lbr aa-lbi aa-lbr cons-dist-aa
    getting trees for 14 clusters with sizes: 29 17 15 14 14 13 12 11 11 11 11 10 10 10
      starting 14 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/93859/fasttree.out /tmp/dralph/tree-inference/93859/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/28347/fasttree.out /tmp/dralph/tree-inference/28347/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/835765/fasttree.out /tmp/dralph/tree-inference/835765/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/432767/fasttree.out /tmp/dralph/tree-inference/432767/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/762280/fasttree.out /tmp/dralph/tree-inference/762280/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/2106/fasttree.out /tmp/dralph/tree-inference/2106/input-seqs.fa
      made 14 fasttree trees (0.6s)
    tree origins: 14 ran fasttree
    calculating selection metrics for 14 clusters with sizes: 29 17 15 14 14 13 12 11 11 11 11 10 10 10
      skipping 198 smaller than 10
      setting default tau to 1 / 370 = 0.0027
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0027
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 53/56 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: cde jlv hly lnt joz tuv ars eio dgu gsu anx cfs agn fkl eny kln ltx bdi ctz agv cly qxz fsy dmz hqt kmx
      setting default tau to 1 / 370 = 0.0027
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0027
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 3/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: dpz
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 2/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hns
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 2/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hjy
                [94miclust 5: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 4/13 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.014  mfreq 0.012  diff 0.002  abs(frac diff) 27%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0081    0.0056       1.4     0.0025     4919509603437603345-igh
              0.0081    0.0056       1.4     0.0025     8943033131066205088-igh
              0.0047    0.0028       1.7     0.0019     0277109334102727989-igh
              0.0047    0.0028       1.7     0.0019     2911453726728538363-igh
          10 with highest+lowest ratios:
              0.0047    0.0028       1.7     0.0019     0277109334102727989-igh
              0.0047    0.0028       1.7     0.0019     2911453726728538363-igh
              0.0081    0.0056       1.4     0.0025     4919509603437603345-igh
              0.0081    0.0056       1.4     0.0025     8943033131066205088-igh
              0.0081    0.0056       1.4     0.0025     8943033131066205088-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 17/21 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bde psy asw adp npt dmt gjp
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: vwy
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 21/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fiq osu efr mow hlo huv dkz bhp gqv agq
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 8): skipped 21/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: cnr bho ioy ovz gjl bdw bgv aiy gyz dir
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 9): skipped 9/15 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hnq glz npx
                [94miclust 10: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.054  mfreq 0.047  diff 0.008  abs(frac diff) 16%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0584    0.0443       1.3     0.0140     7177206618256337666-igh
          10 with highest+lowest ratios:
              0.0584    0.0443       1.3     0.0140     7177206618256337666-igh
              0.0584    0.0443       1.3     0.0140     7177206618256337666-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 10): skipped 21/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: iry jnv ers fiu gjr gns fgl mqv syz nrw
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 13): skipped 6/13 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: aep fgw
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igh-selection-metrics.yaml
      total time: 1.1
[44mget-selection-metrics[0m [94migh+igk[0m:[94m igk[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igk --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
  getting selection metrics: lbi lbr aa-lbi aa-lbr cons-dist-aa
    getting trees for 14 clusters with sizes: 31 20 16 14 13 12 12 12 11 11 11 10 10 10
      starting 14 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/93859/fasttree.out /tmp/dralph/tree-inference/93859/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/28347/fasttree.out /tmp/dralph/tree-inference/28347/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/835765/fasttree.out /tmp/dralph/tree-inference/835765/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/432767/fasttree.out /tmp/dralph/tree-inference/432767/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/762280/fasttree.out /tmp/dralph/tree-inference/762280/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/2106/fasttree.out /tmp/dralph/tree-inference/2106/input-seqs.fa
      made 14 fasttree trees (0.7s)
    tree origins: 14 ran fasttree
    calculating selection metrics for 14 clusters with sizes: 31 20 16 14 13 12 12 12 11 11 11 10 10 10
      skipping 169 smaller than 10
      setting default tau to 1 / 340 = 0.0029
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0029
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 2/33 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: agn
      setting default tau to 1 / 340 = 0.0029
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0029
                [94miclust 1: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/20 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.004  mfreq 0.003  diff 0.001  abs(frac diff) 25%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0399    0.0248       1.6     0.0151     2975541313160084247-igk
          10 with highest+lowest ratios:
              0.0399    0.0248       1.6     0.0151     2975541313160084247-igk
              0.0399    0.0248       1.6     0.0151     2975541313160084247-igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 6/23 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fjq dpz
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 2/18 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: gin
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 3/15 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hjy
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: csw
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 3/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: dkz
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 9): skipped 3/13 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: emp
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igk/partition-igk-selection-metrics.yaml
      total time: 1.0
[44mget-selection-metrics[0m [94migh+igl[0m:[94m igh[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igh --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
  getting selection metrics: lbi lbr aa-lbi aa-lbr cons-dist-aa
    getting trees for 10 clusters with sizes: 24 20 18 15 14 13 12 10 10 10
      starting 10 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/93859/fasttree.out /tmp/dralph/tree-inference/93859/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/28347/fasttree.out /tmp/dralph/tree-inference/28347/input-seqs.fa
      made 10 fasttree trees (0.4s)
    tree origins: 10 ran fasttree
    calculating selection metrics for 10 clusters with sizes: 24 20 18 15 14 13 12 10 10 10
      skipping 141 smaller than 10
      setting default tau to 1 / 382 = 0.0026
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0026
                [94miclust 0: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 5/24 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.016  mfreq 0.014  diff 0.002  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0134    0.0106       1.3     0.0027     0733962872011202790-igh
              0.0103    0.0080       1.3     0.0024     2837610149726138004-igh
              0.0075    0.0053       1.4     0.0022     3108004639836514286-igh
              0.0071    0.0053       1.3     0.0018     6302753673530959145-igh
              0.0038    0.0027       1.4     0.0012     2171328757384279529-igh
          10 with highest+lowest ratios:
              0.0038    0.0027       1.4     0.0012     2171328757384279529-igh
              0.0075    0.0053       1.4     0.0022     3108004639836514286-igh
              0.0071    0.0053       1.3     0.0018     6302753673530959145-igh
              0.0103    0.0080       1.3     0.0024     2837610149726138004-igh
              0.0134    0.0106       1.3     0.0027     0733962872011202790-igh
              0.0038    0.0027       1.4     0.0012     2171328757384279529-igh
              0.0075    0.0053       1.4     0.0022     3108004639836514286-igh
              0.0071    0.0053       1.3     0.0018     6302753673530959145-igh
              0.0103    0.0080       1.3     0.0024     2837610149726138004-igh
              0.0134    0.0106       1.3     0.0027     0733962872011202790-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 33/39 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: atx iqr hly dfu bko ios aho bfn ivw abu ilq qxz hku jsw
      setting default tau to 1 / 382 = 0.0026
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0026
                [94miclust 1: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 13/20 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.144  mfreq 0.110  diff 0.034  abs(frac diff) 31%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.1623    0.1013       1.6     0.0611     8648797381082175059-igh
              0.1735    0.1299       1.3     0.0436     0842496127807567633-igh
              0.1329    0.0909       1.5     0.0420     2308742347537032314-igh
              0.1459    0.1039       1.4     0.0420     0376400657424705652-igh
              0.1502    0.1117       1.3     0.0385     6103417259555053250-igh
              0.1415    0.1039       1.4     0.0376     7239387716811157961-igh
              0.1398    0.1039       1.3     0.0359     1767611730716028444-igh
              0.1518    0.1169       1.3     0.0349     7698768102636357101-igh
              0.1482    0.1143       1.3     0.0339     5102993278851569401-igh
              0.1545    0.1221       1.3     0.0324     7829880163834004541-igh
          10 with highest+lowest ratios:
              0.1623    0.1013       1.6     0.0611     8648797381082175059-igh
              0.1329    0.0909       1.5     0.0420     2308742347537032314-igh
              0.1459    0.1039       1.4     0.0420     0376400657424705652-igh
              0.1415    0.1039       1.4     0.0376     7239387716811157961-igh
              0.1398    0.1039       1.3     0.0359     1767611730716028444-igh
              0.1482    0.1143       1.3     0.0339     5102993278851569401-igh
              0.1414    0.1091       1.3     0.0323     0605436960283742311-igh
              0.1438    0.1117       1.3     0.0321     2244714085091278571-igh
              0.1396    0.1091       1.3     0.0305     7011876773655926503-igh
              0.1545    0.1221       1.3     0.0324     7829880163834004541-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 39/40 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: deh kpr opw eit oxz hiy dmw erx krw wxz bdu ikp lxy itx cit rsu ghz dmz fqu
                [94miclust 2: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 9/18 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.010  mfreq 0.008  diff 0.002  abs(frac diff) 32%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0082    0.0054       1.5     0.0028     9204389322873860625-igh
              0.0107    0.0082       1.3     0.0026     8229153984722279679-igh
              0.0107    0.0082       1.3     0.0025     7768673123773159888-igh
              0.0107    0.0082       1.3     0.0025     7411380636851922730-igh
              0.0079    0.0054       1.4     0.0024     4850952847165763581-igh
              0.0079    0.0054       1.4     0.0024     9219594453118285895-igh
              0.0073    0.0054       1.3     0.0019     3507228390317876631-igh
              0.0073    0.0054       1.3     0.0019     6723344859727410771-igh
              0.0044    0.0027       1.6     0.0016     3810013956605564244-igh
          10 with highest+lowest ratios:
              0.0044    0.0027       1.6     0.0016     3810013956605564244-igh
              0.0082    0.0054       1.5     0.0028     9204389322873860625-igh
              0.0079    0.0054       1.4     0.0024     4850952847165763581-igh
              0.0079    0.0054       1.4     0.0024     9219594453118285895-igh
              0.0073    0.0054       1.3     0.0019     3507228390317876631-igh
              0.0073    0.0054       1.3     0.0019     3507228390317876631-igh
              0.0073    0.0054       1.3     0.0019     6723344859727410771-igh
              0.0107    0.0082       1.3     0.0026     8229153984722279679-igh
              0.0107    0.0082       1.3     0.0025     7768673123773159888-igh
              0.0107    0.0082       1.3     0.0025     7411380636851922730-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 25/31 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fnv ghv iqu bwx blt irt gkt lnu pqr npz cqu brw
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 25/28 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bcn djr evz bho dqx nry lmv lst alz gms ags kvy
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 23/26 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: csz crt efp irs dfq iqs ceu afx deo nov fjv
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 2/15 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: ftw
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hrt
                [94miclust 7: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.010  mfreq 0.009  diff 0.001  abs(frac diff) 15%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0163    0.0113       1.4     0.0050     1210468314540944688-igh
              0.0049    0.0028       1.7     0.0020     2911453726728538363-igh
          10 with highest+lowest ratios:
              0.0049    0.0028       1.7     0.0020     2911453726728538363-igh
              0.0163    0.0113       1.4     0.0050     1210468314540944688-igh
              0.0049    0.0028       1.7     0.0020     2911453726728538363-igh
              0.0163    0.0113       1.4     0.0050     1210468314540944688-igh
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 3/12 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: kmy
                [94miclust 9: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 8/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.007  mfreq 0.005  diff 0.002  abs(frac diff) 44%  ratio 1.4
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0105    0.0078       1.3     0.0027     9143278206265865162-igh
              0.0079    0.0052       1.5     0.0027     0115912531564413663-igh
              0.0079    0.0052       1.5     0.0027     2535087772943783307-igh
              0.0079    0.0052       1.5     0.0027     5529307609141477269-igh
              0.0079    0.0052       1.5     0.0027     4446140756998708037-igh
              0.0079    0.0052       1.5     0.0027     3673734846298556156-igh
              0.0079    0.0052       1.5     0.0027     8185255255178347655-igh
              0.0079    0.0052       1.5     0.0027     4161803344135685880-igh
          10 with highest+lowest ratios:
              0.0079    0.0052       1.5     0.0027     0115912531564413663-igh
              0.0079    0.0052       1.5     0.0027     2535087772943783307-igh
              0.0079    0.0052       1.5     0.0027     5529307609141477269-igh
              0.0079    0.0052       1.5     0.0027     4446140756998708037-igh
              0.0079    0.0052       1.5     0.0027     3673734846298556156-igh
              0.0079    0.0052       1.5     0.0027     4446140756998708037-igh
              0.0079    0.0052       1.5     0.0027     3673734846298556156-igh
              0.0079    0.0052       1.5     0.0027     8185255255178347655-igh
              0.0079    0.0052       1.5     0.0027     4161803344135685880-igh
              0.0105    0.0078       1.3     0.0027     9143278206265865162-igh
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igh-selection-metrics.yaml
      total time: 0.8
[44mget-selection-metrics[0m [94migh+igl[0m:[94m igl[0m
[91mrun[0m /home/dralph/work/partis/bin/partis get-selection-metrics --locus igl --dont-write-git-info --random-seed 1 --n-procs 10 --chosen-ab-fname test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml --refuse-to-cache-parameters --outfname test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
  getting selection metrics: lbi lbr aa-lbi aa-lbr cons-dist-aa
    getting trees for 7 clusters with sizes: 25 23 21 15 15 12 12
      starting 7 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
      made 7 fasttree trees (0.3s)
    tree origins: 7 ran fasttree
    calculating selection metrics for 7 clusters with sizes: 25 23 21 15 15 12 12
      skipping 88 smaller than 10
      setting default tau to 1 / 337 = 0.0030
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0030
                [94miclust 0: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/25 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.026  mfreq 0.023  diff 0.003  abs(frac diff) 15%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0084    0.0060       1.4     0.0024     2464920397588156761-igl
              0.0084    0.0060       1.4     0.0024     7361141167640754157-igl
          10 with highest+lowest ratios:
              0.0084    0.0060       1.4     0.0024     2464920397588156761-igl
              0.0084    0.0060       1.4     0.0024     7361141167640754157-igl
              0.0084    0.0060       1.4     0.0024     2464920397588156761-igl
              0.0084    0.0060       1.4     0.0024     7361141167640754157-igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 34/42 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: dhn tvx bdm luy bgk nxy ajw pru fmw diu dmz cls nst agu nps psu
      setting default tau to 1 / 337 = 0.0030
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0030
                [94miclust 2: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 7/21 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.014  mfreq 0.012  diff 0.002  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0117    0.0092       1.3     0.0024     2308742347537032314-igl
              0.0117    0.0092       1.3     0.0024     7239387716811157961-igl
              0.0117    0.0092       1.3     0.0024     0842496127807567633-igl
              0.0116    0.0092       1.3     0.0024     1767611730716028444-igl
              0.0085    0.0062       1.4     0.0023     0605436960283742311-igl
              0.0085    0.0062       1.4     0.0023     8648797381082175059-igl
              0.0079    0.0062       1.3     0.0018     8055466163282342115-igl
          10 with highest+lowest ratios:
              0.0085    0.0062       1.4     0.0023     0605436960283742311-igl
              0.0085    0.0062       1.4     0.0023     8648797381082175059-igl
              0.0079    0.0062       1.3     0.0018     8055466163282342115-igl
              0.0117    0.0092       1.3     0.0024     2308742347537032314-igl
              0.0117    0.0092       1.3     0.0024     7239387716811157961-igl
              0.0079    0.0062       1.3     0.0018     8055466163282342115-igl
              0.0117    0.0092       1.3     0.0024     2308742347537032314-igl
              0.0117    0.0092       1.3     0.0024     7239387716811157961-igl
              0.0117    0.0092       1.3     0.0024     0842496127807567633-igl
              0.0116    0.0092       1.3     0.0024     1767611730716028444-igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 30/36 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: btu cwx erv adu chv hkr lmt fnz hkt uxy fgm ckw svx emw
                [94miclust 4: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 10/15 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.003  mfreq 0.002  diff 0.001  abs(frac diff) 46%  ratio 1.5
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0086    0.0063       1.4     0.0024     3916124757125782793-igl
              0.0054    0.0031       1.7     0.0023     7427392473165940548-igl
              0.0049    0.0031       1.6     0.0017     2355051243755866763-igl
              0.0049    0.0031       1.5     0.0017     4355827031344083099-igl
              0.0049    0.0031       1.5     0.0017     7732040268686554775-igl
              0.0043    0.0031       1.4     0.0012     8819953233536010839-igl
              0.0043    0.0031       1.4     0.0012     2285376519152879741-igl
              0.0043    0.0031       1.4     0.0012     3572585081032468871-igl
              0.0043    0.0031       1.4     0.0012     1511705061987813904-igl
              0.0043    0.0031       1.4     0.0012     3195493872667711145-igl
          10 with highest+lowest ratios:
              0.0054    0.0031       1.7     0.0023     7427392473165940548-igl
              0.0049    0.0031       1.6     0.0017     2355051243755866763-igl
              0.0049    0.0031       1.5     0.0017     4355827031344083099-igl
              0.0049    0.0031       1.5     0.0017     7732040268686554775-igl
              0.0086    0.0063       1.4     0.0024     3916124757125782793-igl
              0.0043    0.0031       1.4     0.0012     8819953233536010839-igl
              0.0043    0.0031       1.4     0.0012     2285376519152879741-igl
              0.0043    0.0031       1.4     0.0012     3572585081032468871-igl
              0.0043    0.0031       1.4     0.0012     1511705061987813904-igl
              0.0043    0.0031       1.4     0.0012     3195493872667711145-igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 13/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fis iny fjz ovx esz bgm
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: ivz
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 17/21 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: aqv npu erw fiv abx gow ftz lox
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/igh+igl/partition-igl-selection-metrics.yaml
      total time: 0.6
[44mgetting combined h/l selection metrics[0m
    [93mwarning[0m check_concordance_of_cpath_and_annotations(): missing annotations for 3/178 clusters in best partition with sizes: 6, 6, 2
        8 extra annotations (i.e. they're for clusters not in best partition) with sizes: 1 1 1 1 4 1 3 2
          missing 'best' cluster with size 2 overlaps with the following (overlap/size): 1/1  1/1
          missing 'best' cluster with size 6 overlaps with the following (overlap/size): 1/1  1/1  4/4
          missing 'best' cluster with size 6 overlaps with the following (overlap/size): 1/1  3/3  2/2
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/2
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/2
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/6
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/6
          extra annotation with size 4 overlaps with the following best clusters (overlap/size): 4/6
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/6
          extra annotation with size 3 overlaps with the following best clusters (overlap/size): 3/6
          extra annotation with size 2 overlaps with the following best clusters (overlap/size): 2/6
      [93mwarning[0m missing annotation for light chain (size 6, paired with size 7) when finding cluster pairs 0032039233068408084-igk:2659599773997899895-igk:3605721225081273096-igk:4111296117471388057-igk:3659577077549528214-igk:7417323718281539010-igk 0032039233068408084-igh:2659599773997899895-igh:3605721225081273096-igh:4111296117471388057-igh:3659577077549528214-igh:0779828650680679142-igh:7101254269481970028-igh
      [93mwarning[0m missing annotation for light chain (size 6, paired with size 4) when finding cluster pairs 3334215334336355782-igk:6112829882377320741-igk:3320016206356902060-igk:2781969132218865969-igk:7375477325398118147-igk:0510121118584624799-igk 3334215334336355782-igh:6112829882377320741-igh:3320016206356902060-igh:2781969132218865969-igh
      [93mwarning[0m missing annotation for light chain (size 2, paired with size 3) when finding cluster pairs 0701230472194819646-igk:6612041037964933176-igk 6546563291448723158-igh:3123573618536320250-igh:7484979497876499408-igh
    igh+igk: 164 unpaired light clusters after finding h/l cluster pairs
    igh+igk: skipped 38 annotations with zero length paired uids
    igh+igk: skipped 160 annotations with N h or l ids < 10
    [93mwarning[0m check_concordance_of_cpath_and_annotations(): missing annotations for 2/93 clusters in best partition with sizes: 9, 2
        4 extra annotations (i.e. they're for clusters not in best partition) with sizes: 8 1 1 1
          missing 'best' cluster with size 9 overlaps with the following (overlap/size): 8/8  1/1
          missing 'best' cluster with size 2 overlaps with the following (overlap/size): 1/1  1/1
          extra annotation with size 8 overlaps with the following best clusters (overlap/size): 8/9
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/9
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/2
          extra annotation with size 1 overlaps with the following best clusters (overlap/size): 1/2
      [93mwarning[0m missing annotation for light chain (size 9, paired with size 10) when finding cluster pairs 6784227940805863459-igl:5443311291335560888-igl:0115912531564413663-igl:2535087772943783307-igl:3729233455894130421-igl:5529307609141477269-igl:8185255255178347655-igl:3673734846298556156-igl:4446140756998708037-igl 6784227940805863459-igh:7520177754485781781-igh:0115912531564413663-igh:2535087772943783307-igh:9143278206265865162-igh:5529307609141477269-igh:8185255255178347655-igh:3673734846298556156-igh:4446140756998708037-igh:4161803344135685880-igh
      [93mwarning[0m missing annotation for light chain (size 2, paired with size 4) when finding cluster pairs 0971821634516435139-igl:3643224299532561054-igl 0971821634516435139-igh:6655660609989769906-igh:2834565878938946058-igh:1313070068675819441-igh
    igh+igl: 84 unpaired light clusters after finding h/l cluster pairs
    igh+igl: skipped 61 annotations with zero length paired uids
    igh+igl: skipped 81 annotations with N h or l ids < 10
            cons seq not observed
        less than 0.75 (4 / 29 = 0.14) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (8 / 31 = 0.26) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6928029730554114850-igh 6928029730554114850-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 9083670469105414532-igh 9083670469105414532-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2931796058173897070-igh 2931796058173897070-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 5339603941548150916-igh 5339603941548150916-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2449081293795609249-igh 2449081293795609249-igk
            cons seq not observed
        less than 0.75 (5 / 24 = 0.21) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (5 / 25 = 0.20) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2837610149726138004-igh 2837610149726138004-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 5086672391185581025-igh 5086672391185581025-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2282592859345613663-igh 2282592859345613663-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8106283947587798521-igh 8106283947587798521-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6268512401205569735-igh 6268512401205569735-igl
            cons seq not observed
        less than 0.75 (2 / 20 = 0.10) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (3 / 21 = 0.14) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8055466163282342115-igh 8055466163282342115-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2308742347537032314-igh 2308742347537032314-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7829880163834004541-igh 7829880163834004541-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1162854746377830354-igh 1162854746377830354-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7622081286960976867-igh 7622081286960976867-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3507228390317876631-igh 3507228390317876631-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4850952847165763581-igh 4850952847165763581-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1207467187000553831-igh 1207467187000553831-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8776025731513881660-igh 8776025731513881660-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3800059541212012373-igh 3800059541212012373-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8783159409729959662-igh 8783159409729959662-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1018631008044770831-igh 1018631008044770831-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2192138396425496786-igh 2192138396425496786-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6449533098281318509-igh 6449533098281318509-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 0515260043455636484-igh 0515260043455636484-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7675054709541274093-igh 7675054709541274093-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2975541313160084247-igh 2975541313160084247-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8533573562613483939-igh 8533573562613483939-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3116411769246414576-igh 3116411769246414576-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 2861450587812512992-igh 2861450587812512992-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 8809988767957253313-igh 8337279198295839151-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4279508703292024136-igh 4279508703292024136-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3566930738356076969-igh 3566930738356076969-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6320612576182702400-igh 5366871687973810495-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 7483514864049595058-igh 7483514864049595058-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 4089003412167002582-igh 4089003412167002582-igk
            cons seq not observed
        less than 0.75 (3 / 15 = 0.20) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (4 / 15 = 0.27) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 9201666969585767925-igh 9201666969585767925-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 5472033004376707064-igh 5472033004376707064-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 3316045886334424798-igh 3316045886334424798-igl
            cons seq not observed
        less than 0.75 (5 / 14 = 0.36) of h seqs have indels, so not using input seqs for cons seq
        less than 0.75 (1 / 15 = 0.07) of l seqs have indels, so not using input seqs for cons seq
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1511705061987813904-igh 1511705061987813904-igl
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 0046508056751538056-igh 0046508056751538056-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 6685260786122506221-igh 6685260786122506221-igk
          [93mwarning[0m choosing ab with shm indel: the consensus sequence may or may not reflect the indels (see above). uids: 1224628081579189913-igh 1224628081579189913-igk
  getting selection metrics: lbi lbr aa-lbi aa-lbr cons-dist-aa
    getting trees for 17 clusters with sizes: 28 22 18 17 15 14 14 13 12 12 12 11 11 10 10 10 10
      all fasttree outputs exist, not rerunning (e.g. test/paired/new-results-slow/partition-new-simu/fasttree/iclust-0/fasttree.out)
    tree origins: 17 ran fasttree
    calculating selection metrics for 17 clusters with sizes: 28 22 18 17 15 14 14 13 12 12 12 11 11 10 10 10 10
      skipping 1 smaller than 10
      setting default tau to 1 / 714 = 0.0014
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0014
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 51/54 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: emw nqt mxy cem cin lsw nry amz lmo cgp alt lwz bly dik jxy egr iqw irs muy cpz glz gqx bgz dfw dot
      setting default tau to 1 / 714 = 0.0014
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0014
                [94miclust 1: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/22 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.021  mfreq 0.018  diff 0.002  abs(frac diff) 16%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0044    0.0028       1.6     0.0016     2464920397588156761_contig_igh+igl
          10 with highest+lowest ratios:
              0.0044    0.0028       1.6     0.0016     2464920397588156761_contig_igh+igl
              0.0044    0.0028       1.6     0.0016     2464920397588156761_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 38/41 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: coq efg lqu emr bex kpu bkt ewy loq jrs dmu env ipu elp cix ruw fju dou
                [94miclust 2: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 13/18 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.082  mfreq 0.063  diff 0.019  abs(frac diff) 30%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0921    0.0560       1.6     0.0361     8648797381082175059_contig_igh+igl
              0.0822    0.0587       1.4     0.0234     1767611730716028444_contig_igh+igl
              0.1005    0.0792       1.3     0.0213     7698768102636357101_contig_igh+igl
              0.0854    0.0642       1.3     0.0212     2244714085091278571_contig_igh+igl
              0.0812    0.0601       1.4     0.0211     0605436960283742311_contig_igh+igl
              0.0833    0.0628       1.3     0.0205     7011876773655926503_contig_igh+igl
              0.0909    0.0710       1.3     0.0198     7829880163834004541_contig_igh+igl
              0.0834    0.0642       1.3     0.0192     4030504834394011079_contig_igh+igl
              0.0809    0.0628       1.3     0.0181     3916193579031653942_contig_igh+igl
              0.0794    0.0615       1.3     0.0180     3435987981856781021_contig_igh+igl
          10 with highest+lowest ratios:
              0.0921    0.0560       1.6     0.0361     8648797381082175059_contig_igh+igl
              0.0822    0.0587       1.4     0.0234     1767611730716028444_contig_igh+igl
              0.0812    0.0601       1.4     0.0211     0605436960283742311_contig_igh+igl
              0.0854    0.0642       1.3     0.0212     2244714085091278571_contig_igh+igl
              0.0833    0.0628       1.3     0.0205     7011876773655926503_contig_igh+igl
              0.0793    0.0615       1.3     0.0178     7153740201231206318_contig_igh+igl
              0.0809    0.0628       1.3     0.0181     3916193579031653942_contig_igh+igl
              0.0770    0.0601       1.3     0.0169     3460024430053266460_contig_igh+igl
              0.0909    0.0710       1.3     0.0198     7829880163834004541_contig_igh+igl
              0.1005    0.0792       1.3     0.0213     7698768102636357101_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 35/36 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: kpr ahi fhi bns bgk hqu noy jks htu csy bip cit cmu mot cgs suy ajm
                [94miclust 3: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 15/17 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.006  mfreq 0.004  diff 0.002  abs(frac diff) 54%  ratio 1.5
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0119    0.0084       1.4     0.0034     9100239866588205890_contig_igh+igl
              0.0056    0.0028       2.0     0.0028     9204389322873860625_contig_igh+igl
              0.0083    0.0056       1.5     0.0026     1207467187000553831_contig_igh+igl
              0.0082    0.0056       1.5     0.0026     2570466947252138349_contig_igh+igl
              0.0082    0.0056       1.5     0.0026     8407990544654438812_contig_igh+igl
              0.0082    0.0056       1.5     0.0026     3035309602819175983_contig_igh+igl
              0.0068    0.0042       1.6     0.0025     8229153984722279679_contig_igh+igl
              0.0068    0.0042       1.6     0.0025     1806230368692033891_contig_igh+igl
              0.0067    0.0042       1.6     0.0025     7768673123773159888-igh+2898058159068739252-igl
              0.0052    0.0028       1.9     0.0024     6723344859727410771_contig_igh+igl
          10 with highest+lowest ratios:
              0.0056    0.0028       2.0     0.0028     9204389322873860625_contig_igh+igl
              0.0052    0.0028       1.9     0.0024     6723344859727410771_contig_igh+igl
              0.0052    0.0028       1.9     0.0024     4850952847165763581_contig_igh+igl
              0.0052    0.0028       1.9     0.0024     3507228390317876631_contig_igh+igl
              0.0052    0.0028       1.9     0.0024     9219594453118285895_contig_igh+igl
              0.0082    0.0056       1.5     0.0026     2570466947252138349_contig_igh+igl
              0.0082    0.0056       1.5     0.0026     8407990544654438812_contig_igh+igl
              0.0082    0.0056       1.5     0.0026     3035309602819175983_contig_igh+igl
              0.0119    0.0084       1.4     0.0034     9100239866588205890_contig_igh+igl
              0.0006    0.0014       0.4     -0.0009     3810013956605564244_contig_igh+igl
          [93mwarning[0m nuc branch length 0.0006 and hamming frac 0.0015 very different (ratio 0.38) for branch between 3810013956605564244_contig_igh+igl --> 1162854746377830354_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 21/28 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: gsx mwy ahn bnv bjs ejy glr cgr jkp pqz
                [94miclust 4: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 3/15 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.002  mfreq 0.002  diff 0.000  abs(frac diff) 11%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0034    0.0027       1.3     0.0007     4089003412167002582_contig_igh+igk
              0.0034    0.0027       1.3     0.0007     7483514864049595058_contig_igh+igk
              0.0034    0.0027       1.3     0.0007     2868596996019457532_contig_igh+igk
          10 with highest+lowest ratios:
              0.0034    0.0027       1.3     0.0007     4089003412167002582_contig_igh+igk
              0.0034    0.0027       1.3     0.0007     7483514864049595058_contig_igh+igk
              0.0034    0.0027       1.3     0.0007     2868596996019457532_contig_igh+igk
              0.0034    0.0027       1.3     0.0007     7483514864049595058_contig_igh+igk
              0.0034    0.0027       1.3     0.0007     2868596996019457532_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 3/17 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: mqz
                [94miclust 5: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/14 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.004  mfreq 0.004  diff 0.001  abs(frac diff) 11%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0201    0.0127       1.6     0.0074     2975541313160084247_contig_igh+igk
          10 with highest+lowest ratios:
              0.0201    0.0127       1.6     0.0074     2975541313160084247_contig_igh+igk
              0.0201    0.0127       1.6     0.0074     2975541313160084247_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 3/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bdn
                [94miclust 6: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/14 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.001  mfreq 0.000  diff 0.000  abs(frac diff) 34%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0020    0.0014       1.5     0.0007     8533573562613483939_contig_igh+igk
          10 with highest+lowest ratios:
              0.0020    0.0014       1.5     0.0007     8533573562613483939_contig_igh+igk
              0.0020    0.0014       1.5     0.0007     8533573562613483939_contig_igh+igk
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 3/16 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: adg
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 7): skipped 21/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: anu jrv vyz ijy dpz dlr hlm ipq fps fjr
                [94miclust 8: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 5/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.013  mfreq 0.011  diff 0.002  abs(frac diff) 17%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0165    0.0124       1.3     0.0041     6423257657665527373_contig_igh+igl
              0.0158    0.0124       1.3     0.0034     1860372074692685001_contig_igh+igl
              0.0156    0.0124       1.3     0.0032     1109722474862172220_contig_igh+igl
              0.0139    0.0110       1.3     0.0029     7869208859398163520_contig_igh+igl
              0.0139    0.0110       1.3     0.0029     3893915324901514383_contig_igh+igl
          10 with highest+lowest ratios:
              0.0165    0.0124       1.3     0.0041     6423257657665527373_contig_igh+igl
              0.0158    0.0124       1.3     0.0034     1860372074692685001_contig_igh+igl
              0.0139    0.0110       1.3     0.0029     7869208859398163520_contig_igh+igl
              0.0139    0.0110       1.3     0.0029     3893915324901514383_contig_igh+igl
              0.0156    0.0124       1.3     0.0032     1109722474862172220_contig_igh+igl
              0.0165    0.0124       1.3     0.0041     6423257657665527373_contig_igh+igl
              0.0158    0.0124       1.3     0.0034     1860372074692685001_contig_igh+igl
              0.0139    0.0110       1.3     0.0029     7869208859398163520_contig_igh+igl
              0.0139    0.0110       1.3     0.0029     3893915324901514383_contig_igh+igl
              0.0156    0.0124       1.3     0.0032     1109722474862172220_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 8): skipped 19/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: amu loq txz dqs lrx lnq hjx nvy nsu
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 9): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: cty
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 10): skipped 2/14 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hou
                [94miclust 11: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.008  mfreq 0.008  diff 0.001  abs(frac diff) 2%  ratio 1.0
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0006    0.0014       0.4     -0.0009     0277109334102727989_contig_igh+igk
          10 with highest+lowest ratios:
              0.0006    0.0014       0.4     -0.0009     0277109334102727989_contig_igh+igk
              0.0006    0.0014       0.4     -0.0009     0277109334102727989_contig_igh+igk
          [93mwarning[0m nuc branch length 0.0006 and hamming frac 0.0015 very different (ratio 0.37) for branch between 0277109334102727989_contig_igh+igk --> naive
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 11): skipped 13/17 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: dsv bhz lnz iqu qxy
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 12): skipped 21/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: gkx cor fkm dqu hiz ajw nrz rwx dht dst
                [94miclust 13: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.011  mfreq 0.009  diff 0.001  abs(frac diff) 16%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0054    0.0041       1.3     0.0013     4467949456624593698_contig_igh+igl
          10 with highest+lowest ratios:
              0.0054    0.0041       1.3     0.0013     4467949456624593698_contig_igh+igl
              0.0054    0.0041       1.3     0.0013     4467949456624593698_contig_igh+igl
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 13): skipped 17/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: bmy hiu hpu cky afg aco fju elu
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 16): skipped 19/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: buz jvz dmr dtx agx dgy ctx dgi dhp
  writing selection metrics to test/paired/new-results-slow/partition-new-simu/selection-metrics.yaml
      writing 94 chosen abs to test/paired/new-results-slow/get-selection-metrics-new-simu-chosen-abs.csv
      total time: 5.7
