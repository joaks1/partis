[92mcache-parameters-data[0m            /home/dralph/work/partis/bin/partis cache-parameters --dont-write-git-info --infname test/mishmash.fa --parameter-dir test/new-results-slow/test/parameters/data --sw-cachefname test/new-results-slow/test/parameters/data/sw-cache.yaml --n-max-queries -1 --input-metafnames test/input-meta.yaml --random-seed 1 --n-procs 10
  --input-metafnames: added meta info for 4 sequences from test/input-meta.yaml: multiplicities
  note: running on a lot of sequences (1412) without setting --outfname. Which is ok, but there will be no persistent record of the results (except the parameter directory).
caching parameters
  vsearch: 1268 / 1412 v annotations (144 failed) with 191 v genes in 0.1 sec
    keeping 61 / 220 v genes
smith-waterman  (new-allele fitting)
  vsearch: 1264 / 1412 v annotations (148 failed) with 61 v genes in 0.2 sec
  removing old sw cache test/new-results-slow/test/parameters/data/sw-cache.yaml
    running 10 procs for 1412 seqs
    running 13 procs for 71 seqs
      info for 1370 / 1412 = 0.970   (removed: 42 failed)
      kept 437 (0.309) unproductive
    water time: 1.9  (ig-sw 0.1  processing 0.2)
  no queries for allele finding
smith-waterman  (writing parameters)
  vsearch: 1264 / 1412 v annotations (148 failed) with 61 v genes in 0.2 sec
    running 10 procs for 1370 seqs
    running 13 procs for 29 seqs
      info for 1370 / 1412 = 0.970   (removed: 42 failed)
      kept 437 (0.309) unproductive
        writing sw results to test/new-results-slow/test/parameters/data/sw-cache.yaml
    writing parameters to test/new-results-slow/test/parameters/data/sw (2.0 sec)
    water time: 4.7  (ig-sw 2.8  processing 0.2)
  writing hmms (0.4 sec)
hmm
    skipping matches from 4 genes without enough counts: [95mh[0m[91mj[0m[95m4[0m[93m01[0m [95mh[0m[91mj[0m[95m6[0m[93m04[0m [95mh[0m[91mj[0m[95m4[0m[93m03[0m [95mh[0m[91mj[0m[95m6[0m[93m01[0m
    reading output
        read 1370 hmm output lines with 1365 sequences in 1365 events  (5 failures)
          [91mwarning[0m no valid paths: -5294497590599348090 -1651760806376077044 -3094020580816257316 6182728664197942741 6880877555932742798
    writing parameters to test/new-results-slow/test/parameters/data/hmm (1.7 sec)
         infra time: 2.8
      hmm step time: 7.8
  writing hmms (0.7 sec)
      total time: 16.3
[92msimulate[0m                         /home/dralph/work/partis/bin/partis simulate --dont-write-git-info --parameter-dir test/new-results-slow/test/parameters/data --n-sim-events 200 --n-trees 200 --n-leaf-distribution geometric --n-leaves 5 --random-seed 1 --n-procs 10 --outfname test/new-results-slow/test/simu.yaml --indel-frequency 0.2
simulating
      --> proc 0
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 68 seqs in 3.2s (2.8s of which was running bppseqgen)
      total time: 5.1

      --> proc 8
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 100 seqs in 3.7s (3.3s of which was running bppseqgen)
      total time: 5.6

      --> proc 1
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 107 seqs in 3.7s (3.3s of which was running bppseqgen)
      total time: 5.7

      --> proc 4
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 85 seqs in 3.8s (3.4s of which was running bppseqgen)
      total time: 5.8

      --> proc 2
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 93 seqs in 3.8s (3.4s of which was running bppseqgen)
      total time: 5.8

      --> proc 7
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 92 seqs in 3.9s (3.4s of which was running bppseqgen)
      total time: 5.8

      --> proc 5
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 116 seqs in 4.0s (3.6s of which was running bppseqgen)
      total time: 6.0

      --> proc 3
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 120 seqs in 4.1s (3.7s of which was running bppseqgen)
      total time: 6.0

      --> proc 9
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 119 seqs in 4.0s (3.7s of which was running bppseqgen)
      total time: 5.9

      --> proc 6
    reco params: test/new-results-slow/test/parameters/data/hmm     shm params: test/new-results-slow/test/parameters/data/hmm
    made 20 events with 126 seqs in 4.2s (3.8s of which was running bppseqgen)
      total time: 6.1

   read 200 events with 1026 seqs from 10 .yaml files
      total time: 7.0
[92mcache-parameters-simu[0m            /home/dralph/work/partis/bin/partis cache-parameters --dont-write-git-info --infname test/new-results-slow/test/simu.yaml --parameter-dir test/new-results-slow/test/parameters/simu --sw-cachefname test/new-results-slow/test/parameters/simu/sw-cache.yaml --is-simu --random-seed 1 --n-procs 10
  note: running on a lot of sequences (1026) without setting --outfname. Which is ok, but there will be no persistent record of the results (except the parameter directory).
caching parameters
  vsearch: 1021 / 1026 v annotations (5 failed) with 71 v genes in 0.1 sec
    keeping 36 / 220 v genes
    [91mmissing[0m 19 simulation genes (counts): [95mh[0m[91mv[0m[95m1[0m[95m-3[0m[93m02[0m 0  [95mh[0m[91mv[0m[95m1[0m[95m-45[0m[93m02[0m 0  [95mh[0m[91mv[0m[95m1[0m[95m-69-2[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m2[0m[95m-26[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-11[0m[93m06[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-13[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-13[0m[93m02[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-20[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-23[0m[93m03[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-30[0m[93m02[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-43[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m3[0m[95m-66[0m[93m01[0m 34  [95mh[0m[91mv[0m[95m3[0m[95m-9[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m4[0m[95m-30-2[0m[93m05[0m 0  [95mh[0m[91mv[0m[95m4[0m[95m-30-4[0m[93m07[0m 0  [95mh[0m[91mv[0m[95m4[0m[95m-31[0m[93m01[0m 0  [95mh[0m[91mv[0m[95m4[0m[95m-34[0m[93m09[0m 0  [95mh[0m[91mv[0m[95m5[0m[95m-10-1[0m[93m04[0m 0  [95mh[0m[91mv[0m[95m7[0m[95m-4-1[0m[93m02[0m 0
smith-waterman  (new-allele fitting)
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.3 sec
  removing old sw cache test/new-results-slow/test/parameters/simu/sw-cache.yaml
    running 10 procs for 1026 seqs
    running 13 procs for 29 seqs
      info for 1026 / 1026 = 1.000   (removed: 0 failed)
      kept 541 (0.527) unproductive
    water time: 1.9  (ig-sw 0.1  processing 0.2)
smith-waterman  (writing parameters)
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.3 sec
    running 10 procs for 1026 seqs
    running 13 procs for 29 seqs
      info for 1026 / 1026 = 1.000   (removed: 0 failed)
      kept 541 (0.527) unproductive
        writing sw results to test/new-results-slow/test/parameters/simu/sw-cache.yaml
    writing parameters to test/new-results-slow/test/parameters/simu/sw (2.0 sec)
    water time: 4.8  (ig-sw 2.7  processing 0.3)
  writing hmms (0.5 sec)
hmm
    skipping matches from 2 genes without enough counts: [95mh[0m[91mj[0m[95m4[0m[93m01[0m [95mh[0m[91mj[0m[95m4[0m[93m03[0m
    reading output
        read 1026 hmm output lines with 1026 sequences in 1026 events  (0 failures)
    writing parameters to test/new-results-slow/test/parameters/simu/hmm (1.7 sec)
    writing parameters to test/new-results-slow/test/parameters/simu/true (1.7 sec)
         infra time: 4.9
      hmm step time: 7.3
  writing hmms (0.5 sec)
      total time: 16.7
[92mannotate-new-simu[0m                /home/dralph/work/partis/bin/partis annotate --dont-write-git-info --infname test/new-results-slow/test/simu.yaml --parameter-dir test/new-results-slow/test/parameters/simu --sw-cachefname test/new-results-slow/test/parameters/simu/sw-cache.yaml --plot-annotation-performance --is-simu --plotdir test/new-results-slow/annotate-new-simu-annotation-performance --only-csv-plots --random-seed 1 --n-procs 10 --outfname test/new-results-slow/annotate-new-simu.yaml
annotating    (with test/new-results-slow/test/parameters/simu/hmm)
smith-waterman
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.3 sec
        reading sw results from test/new-results-slow/test/parameters/simu/sw-cache.yaml
      info for 1026 / 1026 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 541 (0.527) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 57 queries with different true and inferred net shm indel lengths: 7907949447861526835 5541399216578089879 8182497313827917309 8547350274778512029 6229415222977078373 8592652374915051191 7313925889346239196 0731658054797337526 4127930182589097899 8771859094060782544 8465874259256443010 4803935184235625109 4521387082179107516 6163371271352906028 6061363459152075932 7050154409997465778 5275225551574138175 2627284416925591803 5355320371877009357 3457077416922462888 7138232978272678395 5665531665867722227 0848419198991213747 3311493878297580215 8469632530044100137 0097409748684524621 2472687111454511166 0666911940230375565 7812413597430296784 8168336592863033265 8424775199170235388 8215903312964060027 2541026677860427438 4210459205561506968 1893166104273757824 6885980916818754237 4343208711080632963 7382215779005263009 6275682200253992380 8085365973260492343 3575026491852100580 7850183729210861385 2874389396628656586 2457951469238597830 3170979597150987625 1286123290967801686 8328949932654192785 0337387985659126132 0851134397771293498 2021955038604056806 1825030195571712911 0593301923278609658 1001142585419668610 4431536411746843293 0798344085428533210 0353092956186893277 6548803021293452947
(0.0 sec)
        water time: 1.0
hmm
    reading output
        read 1026 hmm output lines with 1026 sequences in 1026 events  (0 failures)
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 57 queries with different true and inferred net shm indel lengths: 5665531665867722227 0666911940230375565 1893166104273757824 7907949447861526835 5541399216578089879 4127930182589097899 5275225551574138175 0593301923278609658 6229415222977078373 6061363459152075932 7812413597430296784 6275682200253992380 3170979597150987625 8328949932654192785 2472687111454511166 8085365973260492343 1001142585419668610 8182497313827917309 0731658054797337526 5355320371877009357 6885980916818754237 2874389396628656586 0337387985659126132 0353092956186893277 7050154409997465778 0097409748684524621 8168336592863033265 2541026677860427438 7850183729210861385 1286123290967801686 1825030195571712911 0798344085428533210 4803935184235625109 3311493878297580215 8469632530044100137 8424775199170235388 4210459205561506968 6548803021293452947 8771859094060782544 4521387082179107516 0848419198991213747 8215903312964060027 4343208711080632963 0851134397771293498 8465874259256443010 3575026491852100580 2457951469238597830 8547350274778512029 8592652374915051191 7313925889346239196 6163371271352906028 2627284416925591803 3457077416922462888 7138232978272678395 7382215779005263009 2021955038604056806 4431536411746843293
(0.0 sec)
         infra time: 1.1
      hmm step time: 3.4
      total time: 5.3
[92mmulti-annotate-new-simu[0m          /home/dralph/work/partis/bin/partis annotate --dont-write-git-info --infname test/new-results-slow/test/simu.yaml --parameter-dir test/new-results-slow/test/parameters/simu --sw-cachefname test/new-results-slow/test/parameters/simu/sw-cache.yaml --plot-annotation-performance --simultaneous-true-clonal-seqs --is-simu --plotdir test/new-results-slow/multi-annotate-new-simu-annotation-performance --only-csv-plots --random-seed 1 --n-procs 10 --outfname test/new-results-slow/multi-annotate-new-simu.yaml
annotating    (with test/new-results-slow/test/parameters/simu/hmm)
smith-waterman
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.3 sec
  note: not running msa indel stuff for --simultaneous-true-clonal-seqs, so any families with shm indels within cdr3 will be split up before running the hmm. To fix this you'll either need to run set_msa_info() (which is fine and easy, but slow, and requires deciding whether to make sure to run parameter caching with the arg, or else rerun smith waterman with the msa indels
        reading sw results from test/new-results-slow/test/parameters/simu/sw-cache.yaml
      info for 1026 / 1026 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 541 (0.527) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 57 queries with different true and inferred net shm indel lengths: 7907949447861526835 5541399216578089879 8182497313827917309 8547350274778512029 6229415222977078373 8592652374915051191 7313925889346239196 0731658054797337526 4127930182589097899 8771859094060782544 8465874259256443010 4803935184235625109 4521387082179107516 6163371271352906028 6061363459152075932 7050154409997465778 5275225551574138175 2627284416925591803 5355320371877009357 3457077416922462888 7138232978272678395 5665531665867722227 0848419198991213747 3311493878297580215 8469632530044100137 0097409748684524621 2472687111454511166 0666911940230375565 7812413597430296784 8168336592863033265 8424775199170235388 8215903312964060027 2541026677860427438 4210459205561506968 1893166104273757824 6885980916818754237 4343208711080632963 7382215779005263009 6275682200253992380 8085365973260492343 3575026491852100580 7850183729210861385 2874389396628656586 2457951469238597830 3170979597150987625 1286123290967801686 8328949932654192785 0337387985659126132 0851134397771293498 2021955038604056806 1825030195571712911 0593301923278609658 1001142585419668610 4431536411746843293 0798344085428533210 0353092956186893277 6548803021293452947
(0.0 sec)
        water time: 1.1
hmm
  --simultaneous-true-clonal-seqs: grouping seqs according to true partition
  [93mwarning[0m split apart 38 clusters that contained multiple cdr3 lengths (total clusters: 200 --> 244)
      cluster splits:   4 --> 1 3,   4 --> 3 1,   2 --> 1 1,  10 --> 9 1,  17 --> 1 14 1 1,  12 --> 1 11,  13 --> 1 12,  15 --> 1 14,  16 --> 15 1,   4 --> 3 1,   4 --> 1 3,   7 --> 1 6,   3 --> 1 2,   9 --> 8 1,   4 --> 3 1,   7 --> 6 1,  12 --> 1 11,   3 --> 1 2,   5 --> 1 3 1,  19 --> 18 1,   6 --> 5 1,  13 --> 1 12,   3 --> 1 2,   3 --> 1 2,  12 --> 1 11,   4 --> 1 2 1,  15 --> 14 1,   7 --> 1 6,   9 --> 7 1 1,   9 --> 1 8,  12 --> 1 11,   7 --> 1 6,  12 --> 1 11,  10 --> 1 9,   2 --> 1 1,   8 --> 1 7,  14 --> 1 1 12,   4 --> 3 1
  subcluster annotating 244 clusters with steps:  (2.4s) (1.1s) (0.5s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 57 queries with different true and inferred net shm indel lengths: 1893166104273757824 7850183729210861385 5541399216578089879 8547350274778512029 3575026491852100580 8085365973260492343 6275682200253992380 6061363459152075932 8215903312964060027 7812413597430296784 4343208711080632963 5275225551574138175 8771859094060782544 8465874259256443010 0097409748684524621 0593301923278609658 2472687111454511166 7907949447861526835 7382215779005263009 1286123290967801686 8424775199170235388 6163371271352906028 6885980916818754237 0731658054797337526 0666911940230375565 7313925889346239196 8328949932654192785 0337387985659126132 4210459205561506968 3311493878297580215 7050154409997465778 2457951469238597830 1825030195571712911 4127930182589097899 2627284416925591803 1001142585419668610 4521387082179107516 4803935184235625109 2874389396628656586 8182497313827917309 8592652374915051191 8168336592863033265 5355320371877009357 3457077416922462888 0848419198991213747 0798344085428533210 0353092956186893277 6548803021293452947 4431536411746843293 3170979597150987625 8469632530044100137 0851134397771293498 2541026677860427438 6229415222977078373 5665531665867722227 7138232978272678395 2021955038604056806
(0.0 sec)

    subcluster annotation time 5.1
      total time: 7.0
[92mpartition-new-simu[0m               /home/dralph/work/partis/bin/partis partition --dont-write-git-info --infname test/new-results-slow/test/simu.yaml --parameter-dir test/new-results-slow/test/parameters/simu --sw-cachefname test/new-results-slow/test/parameters/simu/sw-cache.yaml --plot-annotation-performance --max-ccf-fail-frac 0.10 --is-simu --persistent-cachefname test/new-results-slow/cache-new-partition.csv --plotdir test/new-results-slow/partition-new-simu-annotation-performance --only-csv-plots --no-partition-plots --random-seed 1 --n-procs 10 --outfname test/new-results-slow/partition-new-simu.yaml
partitioning     (with test/new-results-slow/test/parameters/simu/hmm)
smith-waterman
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.3 sec
        reading sw results from test/new-results-slow/test/parameters/simu/sw-cache.yaml
      info for 1026 / 1026 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 541 (0.527) unproductive
  plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 57 queries with different true and inferred net shm indel lengths: 7907949447861526835 5541399216578089879 8182497313827917309 8547350274778512029 6229415222977078373 8592652374915051191 7313925889346239196 0731658054797337526 4127930182589097899 8771859094060782544 8465874259256443010 4803935184235625109 4521387082179107516 6163371271352906028 6061363459152075932 7050154409997465778 5275225551574138175 2627284416925591803 5355320371877009357 3457077416922462888 7138232978272678395 5665531665867722227 0848419198991213747 3311493878297580215 8469632530044100137 0097409748684524621 2472687111454511166 0666911940230375565 7812413597430296784 8168336592863033265 8424775199170235388 8215903312964060027 2541026677860427438 4210459205561506968 1893166104273757824 6885980916818754237 4343208711080632963 7382215779005263009 6275682200253992380 8085365973260492343 3575026491852100580 7850183729210861385 2874389396628656586 2457951469238597830 3170979597150987625 1286123290967801686 8328949932654192785 0337387985659126132 0851134397771293498 2021955038604056806 1825030195571712911 0593301923278609658 1001142585419668610 4431536411746843293 0798344085428533210 0353092956186893277 6548803021293452947
(0.0 sec)
        water time: 1.0
hmm
  caching all 1026 naive sequences (2.4s)
   collapsed 1026 queries into 487 clusters with identical naive seqs (0.0 sec)
  487 clusters with 10 procs (2.7s)
  404 clusters with 7 procs (2.7s)
  364 clusters with 5 procs (2.5s)
  319 clusters with 3 procs (5.3s)
  276 clusters with 2 procs (5.8s)
  254 clusters with 2 procs (3.9s)
  242 clusters with 2 procs (3.1s)
  232 clusters with 2 procs (1.9s)
  231 clusters with 1 proc (6.1s)
  [93mnote[0m not merging entire cpath history
      partition loop time: 34.2
getting annotations for final partition
  subcluster annotating 224 clusters with steps:  (2.3s) (1.3s) (0.7s) (0.2s)   plotting performance 
    [93mwarning[0m skipped annotation performance evaluation on 57 queries with different true and inferred net shm indel lengths: 1825030195571712911 8182497313827917309 0097409748684524621 1001142585419668610 8469632530044100137 8424775199170235388 7382215779005263009 8771859094060782544 0353092956186893277 6548803021293452947 0337387985659126132 0593301923278609658 0666911940230375565 0731658054797337526 0798344085428533210 0848419198991213747 0851134397771293498 1286123290967801686 1893166104273757824 2021955038604056806 2457951469238597830 2472687111454511166 2541026677860427438 2627284416925591803 2874389396628656586 3170979597150987625 3311493878297580215 3457077416922462888 3575026491852100580 4127930182589097899 4210459205561506968 4343208711080632963 4431536411746843293 4521387082179107516 4803935184235625109 5275225551574138175 5355320371877009357 5541399216578089879 5665531665867722227 6061363459152075932 6163371271352906028 6229415222977078373 6275682200253992380 6885980916818754237 7050154409997465778 7138232978272678395 7313925889346239196 7812413597430296784 7850183729210861385 7907949447861526835 8085365973260492343 8168336592863033265 8215903312964060027 8328949932654192785 8465874259256443010 8547350274778512029 8592652374915051191
(0.0 sec)

    subcluster annotation time 5.5
      total time: 44.2
[92mseed-partition-new-simu[0m          /home/dralph/work/partis/bin/partis partition --dont-write-git-info --infname test/new-results-slow/test/simu.yaml --parameter-dir test/new-results-slow/test/parameters/simu --sw-cachefname test/new-results-slow/test/parameters/simu/sw-cache.yaml --max-ccf-fail-frac 0.10 --is-simu --persistent-cachefname test/new-results-slow/cache-new-partition.csv --seed-unique-id 7812413597430296784 --random-seed 1 --n-procs 10 --outfname test/new-results-slow/seed-partition-new-simu.yaml
partitioning     (with test/new-results-slow/test/parameters/simu/hmm)
smith-waterman
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.2 sec
        reading sw results from test/new-results-slow/test/parameters/simu/sw-cache.yaml
      info for 1026 / 1026 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 541 (0.527) unproductive
      removed 1025 / 1026 = 1.00 sequences with cdr3 length different from seed sequence (leaving 1)
        water time: 0.4
hmm
   collapsed 1 queries into 1 cluster with identical naive seqs (0.0 sec)
  reducing n procs to number of clusters: 10 --> 1
  1 clusters with 1 proc (0.1s)
      partition loop time: 0.1
getting annotations for final partition
    reading output
        read 1 hmm output lines with 1 sequences in 1 events  (0 failures)
      hmm step time: 0.1
  seed cluster size in best partition: 1, excluding seed seq: 0
      total time: 1.4
[92mvsearch-partition-new-simu[0m       /home/dralph/work/partis/bin/partis partition --dont-write-git-info --infname test/new-results-slow/test/simu.yaml --parameter-dir test/new-results-slow/test/parameters/simu --sw-cachefname test/new-results-slow/test/parameters/simu/sw-cache.yaml --naive-vsearch --is-simu --persistent-cachefname test/new-results-slow/cache-new-partition.csv --random-seed 1 --n-procs 10 --outfname test/new-results-slow/vsearch-partition-new-simu.yaml
partitioning     (with test/new-results-slow/test/parameters/simu/hmm)
smith-waterman
  vsearch: 1021 / 1026 v annotations (5 failed) with 35 v genes in 0.3 sec
        reading sw results from test/new-results-slow/test/parameters/simu/sw-cache.yaml
      info for 1026 / 1026 = 1.000   (removed: 0 failed, 0 duplicates [removed when cache file was written])
      kept 541 (0.527) unproductive
        water time: 0.5
hmm
        collapsed 1026 sequences into 487 unique naive sequences over 39 cdr3 lengths (0.0 sec)
    using hfrac bound for vsearch 0.023
    running vsearch 39 times (once for each cdr3 length class): . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
      vsearch time: 2.7
getting annotations for final partition
    using sw annotations (to make a multi-seq annotation for each cluster) instead of running hmm since either --use-sw-annotations or --naive-vsearch/--fast were set
      total time: 4.5
[92mget-selection-metrics-new-simu[0m   /home/dralph/work/partis/bin/partis get-selection-metrics --dont-write-git-info --existing-output-run-cfg paired --random-seed 1 --n-procs 10 --outfname test/new-results-slow/partition-new-simu.yaml --selection-metric-fname test/new-results-slow/get-selection-metrics-new-simu.yaml --ab-choice-cfg /home/dralph/work/partis/test/ab-choice-slow.yaml
  note: --parameter-dir not set, so using default: x-dummy-x
  note: by default we print/operate on *all* annotations in the output file, which in general can include annotations from non-best partititons and non-seed clusters (e.g. if --n-final-clusters was set). If you want to restrict to particular annotations, use one of --only-print-best-partition, --only-print-seed-clusters, or --only-print-queries-to-include-clusters
  getting selection metrics: lbi lbr aa-lbi aa-lbr cons-dist-aa
    getting trees for 25 clusters with sizes: 58 27 18 15 15 14 14 14 14 13 12 12 12 12 12 12 12 11 11 11 11 10 10 10 10
      starting 25 jobs
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/134364/fasttree.out /tmp/dralph/tree-inference/134364/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/847433/fasttree.out /tmp/dralph/tree-inference/847433/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/763774/fasttree.out /tmp/dralph/tree-inference/763774/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/255069/fasttree.out /tmp/dralph/tree-inference/255069/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/495435/fasttree.out /tmp/dralph/tree-inference/495435/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/449491/fasttree.out /tmp/dralph/tree-inference/449491/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/651592/fasttree.out /tmp/dralph/tree-inference/651592/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/788723/fasttree.out /tmp/dralph/tree-inference/788723/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/93859/fasttree.out /tmp/dralph/tree-inference/93859/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/28347/fasttree.out /tmp/dralph/tree-inference/28347/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/835765/fasttree.out /tmp/dralph/tree-inference/835765/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/432767/fasttree.out /tmp/dralph/tree-inference/432767/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/762280/fasttree.out /tmp/dralph/tree-inference/762280/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/2106/fasttree.out /tmp/dralph/tree-inference/2106/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/445387/fasttree.out /tmp/dralph/tree-inference/445387/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/721540/fasttree.out /tmp/dralph/tree-inference/721540/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/228762/fasttree.out /tmp/dralph/tree-inference/228762/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/945270/fasttree.out /tmp/dralph/tree-inference/945270/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/901427/fasttree.out /tmp/dralph/tree-inference/901427/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/30589/fasttree.out /tmp/dralph/tree-inference/30589/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/25445/fasttree.out /tmp/dralph/tree-inference/25445/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/541412/fasttree.out /tmp/dralph/tree-inference/541412/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/939149/fasttree.out /tmp/dralph/tree-inference/939149/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/381204/fasttree.out /tmp/dralph/tree-inference/381204/input-seqs.fa
        [91mrun[0m /home/dralph/work/partis/bin/FastTree -gtr -nt -out /tmp/dralph/tree-inference/216599/fasttree.out /tmp/dralph/tree-inference/216599/input-seqs.fa
      made 25 fasttree trees (1.1s)
    tree origins: 25 ran fasttree
    calculating selection metrics for 25 clusters with sizes: 58 27 18 15 15 14 14 14 14 13 12 12 12 12 12 12 12 11 11 11 11 10 10 10 10
      skipping 199 smaller than 10
      setting default tau to 1 / 385 = 0.0026
    calculating normalized lb index and lb ratio and lb fraction with tau 0.0026
                [94miclust 0: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 25/58 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.122  mfreq 0.098  diff 0.024  abs(frac diff) 28%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.3458    0.2500       1.4     0.0958     8580611929072494629
              0.3230    0.2394       1.3     0.0837     5996312369973873901
              0.3301    0.2580       1.3     0.0722     3299531474101722766
              0.3163    0.2447       1.3     0.0716     5004912586190483500
              0.2641    0.1995       1.3     0.0646     8843925038984200528
              0.2686    0.2074       1.3     0.0612     5262002699921661305
              0.2435    0.1862       1.3     0.0573     5317261447348413077
              0.2293    0.1729       1.3     0.0565     2606904359484370126
              0.2611    0.2074       1.3     0.0537     5889472429843787008
              0.2610    0.2074       1.3     0.0536     7635309425250680746
          10 with highest+lowest ratios:
              0.0085    0.0053       1.6     0.0031     0921321844552397961
              0.0085    0.0053       1.6     0.0031     0765249888038104453
              0.0085    0.0053       1.6     0.0031     4775875578302400347
              0.0085    0.0053       1.6     0.0031     9028242415824287608
              0.0085    0.0053       1.6     0.0031     3046227943764068807
              0.2216    0.1729       1.3     0.0487     2596744735276653355
              0.3301    0.2580       1.3     0.0722     3299531474101722766
              0.2444    0.1941       1.3     0.0502     0941131427804858515
              0.2611    0.2074       1.3     0.0537     5889472429843787008
              0.2610    0.2074       1.3     0.0536     7635309425250680746
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 0): skipped 86/101 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hju jlw hlz hlt bjw itz mqv bhq mqz cfs afl gkx gis ehs djw bfi bdi lqr duy fpq csz auy hxy djm djn lmx ops jox fpr bms ams jqs jwx hqy erv ace kpv etu isw emt cpz agz
      setting default tau to 1 / 385 = 0.0026
    calculating normalized lb index and lb ratio and lb fraction on aa tree with tau 0.0026
                [94miclust 1: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 6/27 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.188  mfreq 0.155  diff 0.033  abs(frac diff) 21%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.3347    0.2473       1.4     0.0874     3817052522006395585
              0.2888    0.2060       1.4     0.0827     9058066474822354368
              0.2849    0.2088       1.4     0.0761     6846512461645696483
              0.1951    0.1511       1.3     0.0440     9059720369639833534
              0.1663    0.1319       1.3     0.0345     5163926881746681588
              0.1550    0.1236       1.3     0.0314     7594829001501376603
          10 with highest+lowest ratios:
              0.2888    0.2060       1.4     0.0827     9058066474822354368
              0.2849    0.2088       1.4     0.0761     6846512461645696483
              0.3347    0.2473       1.4     0.0874     3817052522006395585
              0.1951    0.1511       1.3     0.0440     9059720369639833534
              0.1663    0.1319       1.3     0.0345     5163926881746681588
              0.2849    0.2088       1.4     0.0761     6846512461645696483
              0.3347    0.2473       1.4     0.0874     3817052522006395585
              0.1951    0.1511       1.3     0.0440     9059720369639833534
              0.1663    0.1319       1.3     0.0345     5163926881746681588
              0.1550    0.1236       1.3     0.0314     7594829001501376603
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 1): skipped 51/53 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: uvx nvw env opu gjm hkv jks owy qsu gnv nov iop cfs ekn cor abd axy ehz cis dfl emv fhi aux eik cpw
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 2): skipped 6/21 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: gmn jnu
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 3): skipped 22/26 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fly hpz erv ltw fiu nuw ilu enu auy adk
                [94miclust 4: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 11/15 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.006  mfreq 0.005  diff 0.002  abs(frac diff) 47%  ratio 1.5
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0105    0.0079       1.3     0.0026     8200032599431706939
              0.0077    0.0053       1.5     0.0024     6852900552375855515
              0.0049    0.0026       1.9     0.0023     3404558988120880978
              0.0072    0.0053       1.4     0.0019     3009754671152185473
              0.0072    0.0053       1.4     0.0019     3524771704745413399
              0.0072    0.0053       1.4     0.0019     3009754671152185480
              0.0071    0.0053       1.3     0.0018     7853532979292445879
              0.0044    0.0026       1.7     0.0018     6684168747093431532
              0.0044    0.0026       1.7     0.0018     9047181018969677182
              0.0044    0.0026       1.7     0.0017     0746614823821536296
          10 with highest+lowest ratios:
              0.0049    0.0026       1.9     0.0023     3404558988120880978
              0.0044    0.0026       1.7     0.0018     6684168747093431532
              0.0044    0.0026       1.7     0.0018     9047181018969677182
              0.0044    0.0026       1.7     0.0017     0746614823821536296
              0.0044    0.0026       1.7     0.0017     4723413836503851443
              0.0072    0.0053       1.4     0.0019     3009754671152185473
              0.0072    0.0053       1.4     0.0019     3524771704745413399
              0.0072    0.0053       1.4     0.0019     3009754671152185480
              0.0071    0.0053       1.3     0.0018     7853532979292445879
              0.0105    0.0079       1.3     0.0026     8200032599431706939
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 4): skipped 17/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: dmp ctu swz nqu aps des ehq ksz
                [94miclust 5: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/14 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.011  mfreq 0.010  diff 0.001  abs(frac diff) 15%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0074    0.0056       1.3     0.0018     0705665789104800191
              0.0073    0.0056       1.3     0.0018     6700941779995615208
          10 with highest+lowest ratios:
              0.0074    0.0056       1.3     0.0018     0705665789104800191
              0.0073    0.0056       1.3     0.0018     6700941779995615208
              0.0074    0.0056       1.3     0.0018     0705665789104800191
              0.0073    0.0056       1.3     0.0018     6700941779995615208
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 5): skipped 11/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: iry ajm fgj gkr equ
                [94miclust 6: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/14 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.152  mfreq 0.126  diff 0.025  abs(frac diff) 17%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.2183    0.1730       1.3     0.0454     4202982927593466963
              0.1829    0.1432       1.3     0.0397     9025462472129370575
          10 with highest+lowest ratios:
              0.1829    0.1432       1.3     0.0397     9025462472129370575
              0.2183    0.1730       1.3     0.0454     4202982927593466963
              0.1829    0.1432       1.3     0.0397     9025462472129370575
              0.2183    0.1730       1.3     0.0454     4202982927593466963
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 6): skipped 25/27 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: gnp dsv akq aiv uxz acl bcd rvw mno twz agv diw
                [94miclust 8: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 8/14 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.012  mfreq 0.009  diff 0.002  abs(frac diff) 26%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0106    0.0081       1.3     0.0025     6919639839826806247
              0.0106    0.0081       1.3     0.0025     8408192666895030741
              0.0106    0.0081       1.3     0.0025     5576361343109493841
              0.0106    0.0081       1.3     0.0025     8157607449308548575
              0.0106    0.0081       1.3     0.0025     1437965012518135136
              0.0078    0.0054       1.4     0.0024     4297676972070346751
              0.0073    0.0054       1.3     0.0019     6851655084039570626
              0.0039    0.0027       1.4     0.0012     5339849347142083818
          10 with highest+lowest ratios:
              0.0078    0.0054       1.4     0.0024     4297676972070346751
              0.0039    0.0027       1.4     0.0012     5339849347142083818
              0.0073    0.0054       1.3     0.0019     6851655084039570626
              0.0106    0.0081       1.3     0.0025     6919639839826806247
              0.0106    0.0081       1.3     0.0025     8408192666895030741
              0.0106    0.0081       1.3     0.0025     6919639839826806247
              0.0106    0.0081       1.3     0.0025     8408192666895030741
              0.0106    0.0081       1.3     0.0025     5576361343109493841
              0.0106    0.0081       1.3     0.0025     8157607449308548575
              0.0106    0.0081       1.3     0.0025     1437965012518135136
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 8): skipped 20/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: ejz dmq fns acv lqz fop cex fpz kvy
                [94miclust 9: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/13 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.022  mfreq 0.020  diff 0.002  abs(frac diff) 10%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0314    0.0237       1.3     0.0076     0025379202070708430
          10 with highest+lowest ratios:
              0.0314    0.0237       1.3     0.0076     0025379202070708430
              0.0314    0.0237       1.3     0.0076     0025379202070708430
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 9): skipped 19/23 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: knv etv fgi svx gpt fkq asy knt oqy
                [94miclust 10: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.066  mfreq 0.060  diff 0.006  abs(frac diff) 12%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0563    0.0373       1.5     0.0189     2628891583824908967
          10 with highest+lowest ratios:
              0.0563    0.0373       1.5     0.0189     2628891583824908967
              0.0563    0.0373       1.5     0.0189     2628891583824908967
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 10): skipped 23/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: djp afn quw ckm mst drt nsz fgi prs auy dnp
                [94miclust 11: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 12/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.314  mfreq 0.236  diff 0.078  abs(frac diff) 33%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.3336    0.2385       1.4     0.0951     0967911817829419298
              0.3384    0.2439       1.4     0.0945     0042839661960968908
              0.3341    0.2466       1.4     0.0875     4251686167448260417
              0.3502    0.2656       1.3     0.0846     3766740222568175877
              0.3086    0.2276       1.4     0.0810     8462406852592802703
              0.3105    0.2304       1.3     0.0802     1109255538184002944
              0.3374    0.2575       1.3     0.0800     4469306122113937969
              0.2875    0.2114       1.4     0.0761     8892603402269489295
              0.3106    0.2412       1.3     0.0694     6953688262042512864
              0.2806    0.2168       1.3     0.0638     0402866298387391366
          10 with highest+lowest ratios:
              0.3336    0.2385       1.4     0.0951     0967911817829419298
              0.3384    0.2439       1.4     0.0945     0042839661960968908
              0.2875    0.2114       1.4     0.0761     8892603402269489295
              0.3086    0.2276       1.4     0.0810     8462406852592802703
              0.3341    0.2466       1.4     0.0875     4251686167448260417
              0.3374    0.2575       1.3     0.0800     4469306122113937969
              0.2710    0.2087       1.3     0.0623     1827940065427253567
              0.2806    0.2168       1.3     0.0638     0402866298387391366
              0.3106    0.2412       1.3     0.0694     6953688262042512864
              0.3042    0.2412       1.3     0.0630     0782471809366851622
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 11): skipped 23/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: uwx dqr lty cel ior cuz fgo klq svx lsz lnw
                [94miclust 12: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 3/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.012  mfreq 0.010  diff 0.002  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0067    0.0053       1.3     0.0014     5523198186326057125
              0.0067    0.0053       1.3     0.0013     5843278839855032481
              0.0067    0.0053       1.3     0.0013     7587503135976722168
          10 with highest+lowest ratios:
              0.0067    0.0053       1.3     0.0014     5523198186326057125
              0.0067    0.0053       1.3     0.0013     5843278839855032481
              0.0067    0.0053       1.3     0.0013     7587503135976722168
              0.0067    0.0053       1.3     0.0013     5843278839855032481
              0.0067    0.0053       1.3     0.0013     7587503135976722168
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 12): skipped 21/23 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: egx ftu awy blq ery aku iru ckp agy fqs
                [94miclust 13: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 8/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.200  mfreq 0.157  diff 0.043  abs(frac diff) 27%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.2293    0.1662       1.4     0.0631     1443736194809968918
              0.2099    0.1551       1.4     0.0548     8028791819738729759
              0.2014    0.1496       1.3     0.0518     5682533564123221962
              0.2147    0.1634       1.3     0.0512     2842445918705835311
              0.2206    0.1717       1.3     0.0488     2964638184744488963
              0.1955    0.1496       1.3     0.0459     3518876647674556176
              0.2082    0.1634       1.3     0.0447     7410495072569130435
              0.1821    0.1440       1.3     0.0381     4442699862950807005
          10 with highest+lowest ratios:
              0.2293    0.1662       1.4     0.0631     1443736194809968918
              0.2099    0.1551       1.4     0.0548     8028791819738729759
              0.2014    0.1496       1.3     0.0518     5682533564123221962
              0.2147    0.1634       1.3     0.0512     2842445918705835311
              0.1955    0.1496       1.3     0.0459     3518876647674556176
              0.2147    0.1634       1.3     0.0512     2842445918705835311
              0.1955    0.1496       1.3     0.0459     3518876647674556176
              0.2206    0.1717       1.3     0.0488     2964638184744488963
              0.2082    0.1634       1.3     0.0447     7410495072569130435
              0.1821    0.1440       1.3     0.0381     4442699862950807005
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 13): skipped 23/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: mpu luw lqu aev ajk ruy jku clu qsx jpu frz
                [94miclust 14: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.170  mfreq 0.143  diff 0.027  abs(frac diff) 19%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.1661    0.1302       1.3     0.0359     3103604384010822637
          10 with highest+lowest ratios:
              0.1661    0.1302       1.3     0.0359     3103604384010822637
              0.1661    0.1302       1.3     0.0359     3103604384010822637
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 14): skipped 23/24 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: lmp gmw kpz gju bot gsy iuz egl cqw stz dqx
                [94miclust 15: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/12 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.066  mfreq 0.057  diff 0.009  abs(frac diff) 16%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.2838    0.2270       1.3     0.0568     7272132469891469546
          10 with highest+lowest ratios:
              0.2838    0.2270       1.3     0.0568     7272132469891469546
              0.2838    0.2270       1.3     0.0568     7272132469891469546
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 15): skipped 16/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: pqr oqs hjs amv bfh mux bgo
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 16): skipped 14/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: ouz mqw fos asz csw ahi
                [94miclust 17: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 3/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.010  mfreq 0.008  diff 0.002  abs(frac diff) 23%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0071    0.0053       1.3     0.0018     4710709252797138910
              0.0071    0.0053       1.3     0.0018     8192933045580359368
              0.0038    0.0027       1.4     0.0012     2658059756798675272
          10 with highest+lowest ratios:
              0.0038    0.0027       1.4     0.0012     2658059756798675272
              0.0071    0.0053       1.3     0.0018     4710709252797138910
              0.0071    0.0053       1.3     0.0018     8192933045580359368
              0.0071    0.0053       1.3     0.0018     4710709252797138910
              0.0071    0.0053       1.3     0.0018     8192933045580359368
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 17): skipped 16/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: gjl ioy fit oqr dmy cfp lqy
                [94miclust 18: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.123  mfreq 0.100  diff 0.023  abs(frac diff) 20%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.2073    0.1543       1.3     0.0530     7191959070316982041
              0.1835    0.1463       1.3     0.0372     2697041342429947371
          10 with highest+lowest ratios:
              0.2073    0.1543       1.3     0.0530     7191959070316982041
              0.1835    0.1463       1.3     0.0372     2697041342429947371
              0.2073    0.1543       1.3     0.0530     7191959070316982041
              0.1835    0.1463       1.3     0.0372     2697041342429947371
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 18): skipped 21/22 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: dex bio hir isx gln cnq mnr chl jmx euy
                [94miclust 19: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 2/11 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.018  mfreq 0.015  diff 0.003  abs(frac diff) 17%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0288    0.0191       1.5     0.0098     1195144857838927608
              0.0217    0.0136       1.6     0.0081     6966598603505428501
          10 with highest+lowest ratios:
              0.0217    0.0136       1.6     0.0081     6966598603505428501
              0.0288    0.0191       1.5     0.0098     1195144857838927608
              0.0217    0.0136       1.6     0.0081     6966598603505428501
              0.0288    0.0191       1.5     0.0098     1195144857838927608
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 19): skipped 16/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: hkn ekv fsx aiy grz hkv ady
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 20): skipped 15/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: lor emw bfp cly ary lrz amu
                [94miclust 21: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 9/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.311  mfreq 0.236  diff 0.075  abs(frac diff) 32%  ratio 1.3
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.3357    0.2427       1.4     0.0929     2836745518118231251
              0.3303    0.2427       1.4     0.0875     2471559278948512799
              0.3509    0.2639       1.3     0.0870     6087067579144434654
              0.3189    0.2322       1.4     0.0867     4517542435434548910
              0.3268    0.2454       1.3     0.0814     0089381700078185838
              0.3415    0.2665       1.3     0.0750     8706003854975341026
              0.2740    0.2005       1.4     0.0735     3762553374013250478
              0.3101    0.2454       1.3     0.0647     4616815376895798221
              0.2616    0.2058       1.3     0.0558     5281158094458435417
          10 with highest+lowest ratios:
              0.3357    0.2427       1.4     0.0929     2836745518118231251
              0.3189    0.2322       1.4     0.0867     4517542435434548910
              0.2740    0.2005       1.4     0.0735     3762553374013250478
              0.3303    0.2427       1.4     0.0875     2471559278948512799
              0.3268    0.2454       1.3     0.0814     0089381700078185838
              0.3268    0.2454       1.3     0.0814     0089381700078185838
              0.3509    0.2639       1.3     0.0870     6087067579144434654
              0.3415    0.2665       1.3     0.0750     8706003854975341026
              0.2616    0.2058       1.3     0.0558     5281158094458435417
              0.3101    0.2454       1.3     0.0647     4616815376895798221
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 21): skipped 19/20 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: fkz kqx crx bkw fsz blv jpu din cuy
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 22): skipped 17/19 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: nsx aot cfx ckr gtx mrv knt grx
                [94miclust 23: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 3/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.246  mfreq 0.199  diff 0.047  abs(frac diff) 23%  ratio 1.2
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.2711    0.2067       1.3     0.0643     1032241727623511122
              0.2837    0.2207       1.3     0.0630     5469028371697352133
              0.2726    0.2151       1.3     0.0575     4493561521059537841
          10 with highest+lowest ratios:
              0.2711    0.2067       1.3     0.0643     1032241727623511122
              0.2837    0.2207       1.3     0.0630     5469028371697352133
              0.2726    0.2151       1.3     0.0575     4493561521059537841
              0.2837    0.2207       1.3     0.0630     5469028371697352133
              0.2726    0.2151       1.3     0.0575     4493561521059537841
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 23): skipped 15/18 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: guv gko ijz emn det bjz tuv
                [94miclust 24: [0m[93mwarning [0mtree depth and mfreq differ by more than 25% for 1/10 nodes (note that this is expected if these are single chain sequences being compared to a paired h+l tree)
                    mean values:  tree depth 0.009  mfreq 0.008  diff 0.001  abs(frac diff) 12%  ratio 1.1
          10 with highest abs(diff):
            tree depth   mfreq      ratio    diff
              0.0032    0.0025       1.3     0.0006     4871955213283485260
          10 with highest+lowest ratios:
              0.0032    0.0025       1.3     0.0006     4871955213283485260
              0.0032    0.0025       1.3     0.0006     4871955213283485260
      [93mwarning[0m get_aa_tree() (AA inf tree, iclust 24): skipped 5/13 edges for which we didn't have sequences for both nodes (i.e. left the original branch length unmodified). Missing nodes: alv dqx
  writing selection metrics to test/new-results-slow/get-selection-metrics-new-simu.yaml
      total time: 1.8
